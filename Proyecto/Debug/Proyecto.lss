
AVRASM ver. 2.2.8  C:\Users\alane\Documents\Atmel Studio\7.0\Proyecto\Proyecto\main.asm Thu Mar 14 15:18:42 2024

[builtin](2): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.7.374\avrasm\inc\m328Pdef.inc'
C:\Users\alane\Documents\Atmel Studio\7.0\Proyecto\Proyecto\main.asm(10): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.7.374\avrasm\inc\M328PDEF.inc'
[builtin](2): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.7.374\avrasm\inc\m328Pdef.inc'
C:\Users\alane\Documents\Atmel Studio\7.0\Proyecto\Proyecto\main.asm(10): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.7.374\avrasm\inc\M328PDEF.inc'
                                 
                                 //*****************************************************************
                                 
                                 ;***** Created: 2011-02-09 12:03 ******* Source: ATmega328P.xml **********
                                 ;*************************************************************************
                                 ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
                                 ;* 
                                 ;* Number            : AVR000
                                 ;* File Name         : "m328Pdef.inc"
                                 ;* Title             : Register/Bit Definitions for the ATmega328P
                                 ;* Date              : 2011-02-09
                                 ;* Version           : 2.35
                                 ;* Support E-mail    : avr@atmel.com
                                 ;* Target MCU        : ATmega328P
                                 ;* 
                                 ;* DESCRIPTION
                                 ;* When including this file in the assembly program file, all I/O register 
                                 ;* names and I/O register bit names appearing in the data book can be used.
                                 ;* In addition, the six registers forming the three data pointers X, Y and 
                                 ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
                                 ;* SRAM is also defined 
                                 ;* 
                                 ;* The Register names are represented by their hexadecimal address.
                                 ;* 
                                 ;* The Register Bit names are represented by their bit number (0-7).
                                 ;* 
                                 ;* Please observe the difference in using the bit names with instructions
                                 ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc"
                                 ;* (skip if bit in register set/cleared). The following example illustrates
                                 ;* this:
                                 ;* 
                                 ;* in    r16,PORTB             ;read PORTB latch
                                 ;* sbr   r16,(1<<PB6)+(1<<PB5) ;set PB6 and PB5 (use masks, not bit#)
                                 ;* out   PORTB,r16             ;output to PORTB
                                 ;* 
                                 ;* in    r16,TIFR              ;read the Timer Interrupt Flag Register
                                 ;* sbrc  r16,TOV0              ;test the overflow flag (use bit#)
                                 ;* rjmp  TOV0_is_set           ;jump if set
                                 ;* ...                         ;otherwise do something else
                                 ;*************************************************************************
                                 
                                 #ifndef _M328PDEF_INC_
                                 #define _M328PDEF_INC_
                                 
                                 
                                 #pragma partinc 0
                                 
                                 ; ***** SPECIFY DEVICE ***************************************************
                                 .device ATmega328P
                                 #pragma AVRPART ADMIN PART_NAME ATmega328P
                                 .equ	SIGNATURE_000	= 0x1e
                                 .equ	SIGNATURE_001	= 0x95
                                 .equ	SIGNATURE_002	= 0x0f
                                 
                                 #pragma AVRPART CORE CORE_VERSION V2E
                                 
                                 
                                 ; ***** I/O REGISTER DEFINITIONS *****************************************
                                 ; NOTE:
                                 ; Definitions marked "MEMORY MAPPED"are extended I/O ports
                                 ; and cannot be used with IN/OUT instructions
                                 .equ	UDR0	= 0xc6	; MEMORY MAPPED
                                 .equ	UBRR0L	= 0xc4	; MEMORY MAPPED
                                 .equ	UBRR0H	= 0xc5	; MEMORY MAPPED
                                 .equ	UCSR0C	= 0xc2	; MEMORY MAPPED
                                 .equ	UCSR0B	= 0xc1	; MEMORY MAPPED
                                 .equ	UCSR0A	= 0xc0	; MEMORY MAPPED
                                 .equ	TWAMR	= 0xbd	; MEMORY MAPPED
                                 .equ	TWCR	= 0xbc	; MEMORY MAPPED
                                 .equ	TWDR	= 0xbb	; MEMORY MAPPED
                                 .equ	TWAR	= 0xba	; MEMORY MAPPED
                                 .equ	TWSR	= 0xb9	; MEMORY MAPPED
                                 .equ	TWBR	= 0xb8	; MEMORY MAPPED
                                 .equ	ASSR	= 0xb6	; MEMORY MAPPED
                                 .equ	OCR2B	= 0xb4	; MEMORY MAPPED
                                 .equ	OCR2A	= 0xb3	; MEMORY MAPPED
                                 .equ	TCNT2	= 0xb2	; MEMORY MAPPED
                                 .equ	TCCR2B	= 0xb1	; MEMORY MAPPED
                                 .equ	TCCR2A	= 0xb0	; MEMORY MAPPED
                                 .equ	OCR1BL	= 0x8a	; MEMORY MAPPED
                                 .equ	OCR1BH	= 0x8b	; MEMORY MAPPED
                                 .equ	OCR1AL	= 0x88	; MEMORY MAPPED
                                 .equ	OCR1AH	= 0x89	; MEMORY MAPPED
                                 .equ	ICR1L	= 0x86	; MEMORY MAPPED
                                 .equ	ICR1H	= 0x87	; MEMORY MAPPED
                                 .equ	TCNT1L	= 0x84	; MEMORY MAPPED
                                 .equ	TCNT1H	= 0x85	; MEMORY MAPPED
                                 .equ	TCCR1C	= 0x82	; MEMORY MAPPED
                                 .equ	TCCR1B	= 0x81	; MEMORY MAPPED
                                 .equ	TCCR1A	= 0x80	; MEMORY MAPPED
                                 .equ	DIDR1	= 0x7f	; MEMORY MAPPED
                                 .equ	DIDR0	= 0x7e	; MEMORY MAPPED
                                 .equ	ADMUX	= 0x7c	; MEMORY MAPPED
                                 .equ	ADCSRB	= 0x7b	; MEMORY MAPPED
                                 .equ	ADCSRA	= 0x7a	; MEMORY MAPPED
                                 .equ	ADCH	= 0x79	; MEMORY MAPPED
                                 .equ	ADCL	= 0x78	; MEMORY MAPPED
                                 .equ	TIMSK2	= 0x70	; MEMORY MAPPED
                                 .equ	TIMSK1	= 0x6f	; MEMORY MAPPED
                                 .equ	TIMSK0	= 0x6e	; MEMORY MAPPED
                                 .equ	PCMSK1	= 0x6c	; MEMORY MAPPED
                                 .equ	PCMSK2	= 0x6d	; MEMORY MAPPED
                                 .equ	PCMSK0	= 0x6b	; MEMORY MAPPED
                                 .equ	EICRA	= 0x69	; MEMORY MAPPED
                                 .equ	PCICR	= 0x68	; MEMORY MAPPED
                                 .equ	OSCCAL	= 0x66	; MEMORY MAPPED
                                 .equ	PRR	= 0x64	; MEMORY MAPPED
                                 .equ	CLKPR	= 0x61	; MEMORY MAPPED
                                 .equ	WDTCSR	= 0x60	; MEMORY MAPPED
                                 .equ	SREG	= 0x3f
                                 .equ	SPL	= 0x3d
                                 .equ	SPH	= 0x3e
                                 .equ	SPMCSR	= 0x37
                                 .equ	MCUCR	= 0x35
                                 .equ	MCUSR	= 0x34
                                 .equ	SMCR	= 0x33
                                 .equ	ACSR	= 0x30
                                 .equ	SPDR	= 0x2e
                                 .equ	SPSR	= 0x2d
                                 .equ	SPCR	= 0x2c
                                 .equ	GPIOR2	= 0x2b
                                 .equ	GPIOR1	= 0x2a
                                 .equ	OCR0B	= 0x28
                                 .equ	OCR0A	= 0x27
                                 .equ	TCNT0	= 0x26
                                 .equ	TCCR0B	= 0x25
                                 .equ	TCCR0A	= 0x24
                                 .equ	GTCCR	= 0x23
                                 .equ	EEARH	= 0x22
                                 .equ	EEARL	= 0x21
                                 .equ	EEDR	= 0x20
                                 .equ	EECR	= 0x1f
                                 .equ	GPIOR0	= 0x1e
                                 .equ	EIMSK	= 0x1d
                                 .equ	EIFR	= 0x1c
                                 .equ	PCIFR	= 0x1b
                                 .equ	TIFR2	= 0x17
                                 .equ	TIFR1	= 0x16
                                 .equ	TIFR0	= 0x15
                                 .equ	PORTD	= 0x0b
                                 .equ	DDRD	= 0x0a
                                 .equ	PIND	= 0x09
                                 .equ	PORTC	= 0x08
                                 .equ	DDRC	= 0x07
                                 .equ	PINC	= 0x06
                                 .equ	PORTB	= 0x05
                                 .equ	DDRB	= 0x04
                                 .equ	PINB	= 0x03
                                 
                                 
                                 ; ***** BIT DEFINITIONS **************************************************
                                 
                                 ; ***** USART0 ***********************
                                 ; UDR0 - USART I/O Data Register
                                 .equ	UDR0_0	= 0	; USART I/O Data Register bit 0
                                 .equ	UDR0_1	= 1	; USART I/O Data Register bit 1
                                 .equ	UDR0_2	= 2	; USART I/O Data Register bit 2
                                 .equ	UDR0_3	= 3	; USART I/O Data Register bit 3
                                 .equ	UDR0_4	= 4	; USART I/O Data Register bit 4
                                 .equ	UDR0_5	= 5	; USART I/O Data Register bit 5
                                 .equ	UDR0_6	= 6	; USART I/O Data Register bit 6
                                 .equ	UDR0_7	= 7	; USART I/O Data Register bit 7
                                 
                                 ; UCSR0A - USART Control and Status Register A
                                 .equ	MPCM0	= 0	; Multi-processor Communication Mode
                                 .equ	U2X0	= 1	; Double the USART transmission speed
                                 .equ	UPE0	= 2	; Parity Error
                                 .equ	DOR0	= 3	; Data overRun
                                 .equ	FE0	= 4	; Framing Error
                                 .equ	UDRE0	= 5	; USART Data Register Empty
                                 .equ	TXC0	= 6	; USART Transmitt Complete
                                 .equ	RXC0	= 7	; USART Receive Complete
                                 
                                 ; UCSR0B - USART Control and Status Register B
                                 .equ	TXB80	= 0	; Transmit Data Bit 8
                                 .equ	RXB80	= 1	; Receive Data Bit 8
                                 .equ	UCSZ02	= 2	; Character Size
                                 .equ	TXEN0	= 3	; Transmitter Enable
                                 .equ	RXEN0	= 4	; Receiver Enable
                                 .equ	UDRIE0	= 5	; USART Data register Empty Interrupt Enable
                                 .equ	TXCIE0	= 6	; TX Complete Interrupt Enable
                                 .equ	RXCIE0	= 7	; RX Complete Interrupt Enable
                                 
                                 ; UCSR0C - USART Control and Status Register C
                                 .equ	UCPOL0	= 0	; Clock Polarity
                                 .equ	UCSZ00	= 1	; Character Size
                                 .equ	UCPHA0	= UCSZ00	; For compatibility
                                 .equ	UCSZ01	= 2	; Character Size
                                 .equ	UDORD0	= UCSZ01	; For compatibility
                                 .equ	USBS0	= 3	; Stop Bit Select
                                 .equ	UPM00	= 4	; Parity Mode Bit 0
                                 .equ	UPM01	= 5	; Parity Mode Bit 1
                                 .equ	UMSEL00	= 6	; USART Mode Select
                                 .equ	UMSEL0	= UMSEL00	; For compatibility
                                 .equ	UMSEL01	= 7	; USART Mode Select
                                 .equ	UMSEL1	= UMSEL01	; For compatibility
                                 
                                 ; UBRR0H - USART Baud Rate Register High Byte
                                 .equ	UBRR8	= 0	; USART Baud Rate Register bit 8
                                 .equ	UBRR9	= 1	; USART Baud Rate Register bit 9
                                 .equ	UBRR10	= 2	; USART Baud Rate Register bit 10
                                 .equ	UBRR11	= 3	; USART Baud Rate Register bit 11
                                 
                                 ; UBRR0L - USART Baud Rate Register Low Byte
                                 .equ	_UBRR0	= 0	; USART Baud Rate Register bit 0
                                 .equ	_UBRR1	= 1	; USART Baud Rate Register bit 1
                                 .equ	UBRR2	= 2	; USART Baud Rate Register bit 2
                                 .equ	UBRR3	= 3	; USART Baud Rate Register bit 3
                                 .equ	UBRR4	= 4	; USART Baud Rate Register bit 4
                                 .equ	UBRR5	= 5	; USART Baud Rate Register bit 5
                                 .equ	UBRR6	= 6	; USART Baud Rate Register bit 6
                                 .equ	UBRR7	= 7	; USART Baud Rate Register bit 7
                                 
                                 
                                 ; ***** TWI **************************
                                 ; TWAMR - TWI (Slave) Address Mask Register
                                 .equ	TWAM0	= 1	; 
                                 .equ	TWAMR0	= TWAM0	; For compatibility
                                 .equ	TWAM1	= 2	; 
                                 .equ	TWAMR1	= TWAM1	; For compatibility
                                 .equ	TWAM2	= 3	; 
                                 .equ	TWAMR2	= TWAM2	; For compatibility
                                 .equ	TWAM3	= 4	; 
                                 .equ	TWAMR3	= TWAM3	; For compatibility
                                 .equ	TWAM4	= 5	; 
                                 .equ	TWAMR4	= TWAM4	; For compatibility
                                 .equ	TWAM5	= 6	; 
                                 .equ	TWAMR5	= TWAM5	; For compatibility
                                 .equ	TWAM6	= 7	; 
                                 .equ	TWAMR6	= TWAM6	; For compatibility
                                 
                                 ; TWBR - TWI Bit Rate register
                                 .equ	TWBR0	= 0	; 
                                 .equ	TWBR1	= 1	; 
                                 .equ	TWBR2	= 2	; 
                                 .equ	TWBR3	= 3	; 
                                 .equ	TWBR4	= 4	; 
                                 .equ	TWBR5	= 5	; 
                                 .equ	TWBR6	= 6	; 
                                 .equ	TWBR7	= 7	; 
                                 
                                 ; TWCR - TWI Control Register
                                 .equ	TWIE	= 0	; TWI Interrupt Enable
                                 .equ	TWEN	= 2	; TWI Enable Bit
                                 .equ	TWWC	= 3	; TWI Write Collition Flag
                                 .equ	TWSTO	= 4	; TWI Stop Condition Bit
                                 .equ	TWSTA	= 5	; TWI Start Condition Bit
                                 .equ	TWEA	= 6	; TWI Enable Acknowledge Bit
                                 .equ	TWINT	= 7	; TWI Interrupt Flag
                                 
                                 ; TWSR - TWI Status Register
                                 .equ	TWPS0	= 0	; TWI Prescaler
                                 .equ	TWPS1	= 1	; TWI Prescaler
                                 .equ	TWS3	= 3	; TWI Status
                                 .equ	TWS4	= 4	; TWI Status
                                 .equ	TWS5	= 5	; TWI Status
                                 .equ	TWS6	= 6	; TWI Status
                                 .equ	TWS7	= 7	; TWI Status
                                 
                                 ; TWDR - TWI Data register
                                 .equ	TWD0	= 0	; TWI Data Register Bit 0
                                 .equ	TWD1	= 1	; TWI Data Register Bit 1
                                 .equ	TWD2	= 2	; TWI Data Register Bit 2
                                 .equ	TWD3	= 3	; TWI Data Register Bit 3
                                 .equ	TWD4	= 4	; TWI Data Register Bit 4
                                 .equ	TWD5	= 5	; TWI Data Register Bit 5
                                 .equ	TWD6	= 6	; TWI Data Register Bit 6
                                 .equ	TWD7	= 7	; TWI Data Register Bit 7
                                 
                                 ; TWAR - TWI (Slave) Address register
                                 .equ	TWGCE	= 0	; TWI General Call Recognition Enable Bit
                                 .equ	TWA0	= 1	; TWI (Slave) Address register Bit 0
                                 .equ	TWA1	= 2	; TWI (Slave) Address register Bit 1
                                 .equ	TWA2	= 3	; TWI (Slave) Address register Bit 2
                                 .equ	TWA3	= 4	; TWI (Slave) Address register Bit 3
                                 .equ	TWA4	= 5	; TWI (Slave) Address register Bit 4
                                 .equ	TWA5	= 6	; TWI (Slave) Address register Bit 5
                                 .equ	TWA6	= 7	; TWI (Slave) Address register Bit 6
                                 
                                 
                                 ; ***** TIMER_COUNTER_1 **************
                                 ; TIMSK1 - Timer/Counter Interrupt Mask Register
                                 .equ	TOIE1	= 0	; Timer/Counter1 Overflow Interrupt Enable
                                 .equ	OCIE1A	= 1	; Timer/Counter1 Output CompareA Match Interrupt Enable
                                 .equ	OCIE1B	= 2	; Timer/Counter1 Output CompareB Match Interrupt Enable
                                 .equ	ICIE1	= 5	; Timer/Counter1 Input Capture Interrupt Enable
                                 
                                 ; TIFR1 - Timer/Counter Interrupt Flag register
                                 .equ	TOV1	= 0	; Timer/Counter1 Overflow Flag
                                 .equ	OCF1A	= 1	; Output Compare Flag 1A
                                 .equ	OCF1B	= 2	; Output Compare Flag 1B
                                 .equ	ICF1	= 5	; Input Capture Flag 1
                                 
                                 ; TCCR1A - Timer/Counter1 Control Register A
                                 .equ	WGM10	= 0	; Waveform Generation Mode
                                 .equ	WGM11	= 1	; Waveform Generation Mode
                                 .equ	COM1B0	= 4	; Compare Output Mode 1B, bit 0
                                 .equ	COM1B1	= 5	; Compare Output Mode 1B, bit 1
                                 .equ	COM1A0	= 6	; Comparet Ouput Mode 1A, bit 0
                                 .equ	COM1A1	= 7	; Compare Output Mode 1A, bit 1
                                 
                                 ; TCCR1B - Timer/Counter1 Control Register B
                                 .equ	CS10	= 0	; Prescaler source of Timer/Counter 1
                                 .equ	CS11	= 1	; Prescaler source of Timer/Counter 1
                                 .equ	CS12	= 2	; Prescaler source of Timer/Counter 1
                                 .equ	WGM12	= 3	; Waveform Generation Mode
                                 .equ	WGM13	= 4	; Waveform Generation Mode
                                 .equ	ICES1	= 6	; Input Capture 1 Edge Select
                                 .equ	ICNC1	= 7	; Input Capture 1 Noise Canceler
                                 
                                 ; TCCR1C - Timer/Counter1 Control Register C
                                 .equ	FOC1B	= 6	; 
                                 .equ	FOC1A	= 7	; 
                                 
                                 ; GTCCR - General Timer/Counter Control Register
                                 .equ	PSRSYNC	= 0	; Prescaler Reset Timer/Counter1 and Timer/Counter0
                                 .equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** TIMER_COUNTER_2 **************
                                 ; TIMSK2 - Timer/Counter Interrupt Mask register
                                 .equ	TOIE2	= 0	; Timer/Counter2 Overflow Interrupt Enable
                                 .equ	TOIE2A	= TOIE2	; For compatibility
                                 .equ	OCIE2A	= 1	; Timer/Counter2 Output Compare Match A Interrupt Enable
                                 .equ	OCIE2B	= 2	; Timer/Counter2 Output Compare Match B Interrupt Enable
                                 
                                 ; TIFR2 - Timer/Counter Interrupt Flag Register
                                 .equ	TOV2	= 0	; Timer/Counter2 Overflow Flag
                                 .equ	OCF2A	= 1	; Output Compare Flag 2A
                                 .equ	OCF2B	= 2	; Output Compare Flag 2B
                                 
                                 ; TCCR2A - Timer/Counter2 Control Register A
                                 .equ	WGM20	= 0	; Waveform Genration Mode
                                 .equ	WGM21	= 1	; Waveform Genration Mode
                                 .equ	COM2B0	= 4	; Compare Output Mode bit 0
                                 .equ	COM2B1	= 5	; Compare Output Mode bit 1
                                 .equ	COM2A0	= 6	; Compare Output Mode bit 1
                                 .equ	COM2A1	= 7	; Compare Output Mode bit 1
                                 
                                 ; TCCR2B - Timer/Counter2 Control Register B
                                 .equ	CS20	= 0	; Clock Select bit 0
                                 .equ	CS21	= 1	; Clock Select bit 1
                                 .equ	CS22	= 2	; Clock Select bit 2
                                 .equ	WGM22	= 3	; Waveform Generation Mode
                                 .equ	FOC2B	= 6	; Force Output Compare B
                                 .equ	FOC2A	= 7	; Force Output Compare A
                                 
                                 ; TCNT2 - Timer/Counter2
                                 .equ	TCNT2_0	= 0	; Timer/Counter 2 bit 0
                                 .equ	TCNT2_1	= 1	; Timer/Counter 2 bit 1
                                 .equ	TCNT2_2	= 2	; Timer/Counter 2 bit 2
                                 .equ	TCNT2_3	= 3	; Timer/Counter 2 bit 3
                                 .equ	TCNT2_4	= 4	; Timer/Counter 2 bit 4
                                 .equ	TCNT2_5	= 5	; Timer/Counter 2 bit 5
                                 .equ	TCNT2_6	= 6	; Timer/Counter 2 bit 6
                                 .equ	TCNT2_7	= 7	; Timer/Counter 2 bit 7
                                 
                                 ; OCR2A - Timer/Counter2 Output Compare Register A
                                 .equ	OCR2A_0	= 0	; Timer/Counter2 Output Compare Register Bit 0
                                 .equ	OCR2A_1	= 1	; Timer/Counter2 Output Compare Register Bit 1
                                 .equ	OCR2A_2	= 2	; Timer/Counter2 Output Compare Register Bit 2
                                 .equ	OCR2A_3	= 3	; Timer/Counter2 Output Compare Register Bit 3
                                 .equ	OCR2A_4	= 4	; Timer/Counter2 Output Compare Register Bit 4
                                 .equ	OCR2A_5	= 5	; Timer/Counter2 Output Compare Register Bit 5
                                 .equ	OCR2A_6	= 6	; Timer/Counter2 Output Compare Register Bit 6
                                 .equ	OCR2A_7	= 7	; Timer/Counter2 Output Compare Register Bit 7
                                 
                                 ; OCR2B - Timer/Counter2 Output Compare Register B
                                 .equ	OCR2B_0	= 0	; Timer/Counter2 Output Compare Register Bit 0
                                 .equ	OCR2B_1	= 1	; Timer/Counter2 Output Compare Register Bit 1
                                 .equ	OCR2B_2	= 2	; Timer/Counter2 Output Compare Register Bit 2
                                 .equ	OCR2B_3	= 3	; Timer/Counter2 Output Compare Register Bit 3
                                 .equ	OCR2B_4	= 4	; Timer/Counter2 Output Compare Register Bit 4
                                 .equ	OCR2B_5	= 5	; Timer/Counter2 Output Compare Register Bit 5
                                 .equ	OCR2B_6	= 6	; Timer/Counter2 Output Compare Register Bit 6
                                 .equ	OCR2B_7	= 7	; Timer/Counter2 Output Compare Register Bit 7
                                 
                                 ; ASSR - Asynchronous Status Register
                                 .equ	TCR2BUB	= 0	; Timer/Counter Control Register2 Update Busy
                                 .equ	TCR2AUB	= 1	; Timer/Counter Control Register2 Update Busy
                                 .equ	OCR2BUB	= 2	; Output Compare Register 2 Update Busy
                                 .equ	OCR2AUB	= 3	; Output Compare Register2 Update Busy
                                 .equ	TCN2UB	= 4	; Timer/Counter2 Update Busy
                                 .equ	AS2	= 5	; Asynchronous Timer/Counter2
                                 .equ	EXCLK	= 6	; Enable External Clock Input
                                 
                                 ; GTCCR - General Timer Counter Control register
                                 .equ	PSRASY	= 1	; Prescaler Reset Timer/Counter2
                                 .equ	PSR2	= PSRASY	; For compatibility
                                 ;.equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** AD_CONVERTER *****************
                                 ; ADMUX - The ADC multiplexer Selection Register
                                 .equ	MUX0	= 0	; Analog Channel and Gain Selection Bits
                                 .equ	MUX1	= 1	; Analog Channel and Gain Selection Bits
                                 .equ	MUX2	= 2	; Analog Channel and Gain Selection Bits
                                 .equ	MUX3	= 3	; Analog Channel and Gain Selection Bits
                                 .equ	ADLAR	= 5	; Left Adjust Result
                                 .equ	REFS0	= 6	; Reference Selection Bit 0
                                 .equ	REFS1	= 7	; Reference Selection Bit 1
                                 
                                 ; ADCSRA - The ADC Control and Status register A
                                 .equ	ADPS0	= 0	; ADC  Prescaler Select Bits
                                 .equ	ADPS1	= 1	; ADC  Prescaler Select Bits
                                 .equ	ADPS2	= 2	; ADC  Prescaler Select Bits
                                 .equ	ADIE	= 3	; ADC Interrupt Enable
                                 .equ	ADIF	= 4	; ADC Interrupt Flag
                                 .equ	ADATE	= 5	; ADC  Auto Trigger Enable
                                 .equ	ADSC	= 6	; ADC Start Conversion
                                 .equ	ADEN	= 7	; ADC Enable
                                 
                                 ; ADCSRB - The ADC Control and Status register B
                                 .equ	ADTS0	= 0	; ADC Auto Trigger Source bit 0
                                 .equ	ADTS1	= 1	; ADC Auto Trigger Source bit 1
                                 .equ	ADTS2	= 2	; ADC Auto Trigger Source bit 2
                                 .equ	ACME	= 6	; 
                                 
                                 ; ADCH - ADC Data Register High Byte
                                 .equ	ADCH0	= 0	; ADC Data Register High Byte Bit 0
                                 .equ	ADCH1	= 1	; ADC Data Register High Byte Bit 1
                                 .equ	ADCH2	= 2	; ADC Data Register High Byte Bit 2
                                 .equ	ADCH3	= 3	; ADC Data Register High Byte Bit 3
                                 .equ	ADCH4	= 4	; ADC Data Register High Byte Bit 4
                                 .equ	ADCH5	= 5	; ADC Data Register High Byte Bit 5
                                 .equ	ADCH6	= 6	; ADC Data Register High Byte Bit 6
                                 .equ	ADCH7	= 7	; ADC Data Register High Byte Bit 7
                                 
                                 ; ADCL - ADC Data Register Low Byte
                                 .equ	ADCL0	= 0	; ADC Data Register Low Byte Bit 0
                                 .equ	ADCL1	= 1	; ADC Data Register Low Byte Bit 1
                                 .equ	ADCL2	= 2	; ADC Data Register Low Byte Bit 2
                                 .equ	ADCL3	= 3	; ADC Data Register Low Byte Bit 3
                                 .equ	ADCL4	= 4	; ADC Data Register Low Byte Bit 4
                                 .equ	ADCL5	= 5	; ADC Data Register Low Byte Bit 5
                                 .equ	ADCL6	= 6	; ADC Data Register Low Byte Bit 6
                                 .equ	ADCL7	= 7	; ADC Data Register Low Byte Bit 7
                                 
                                 ; DIDR0 - Digital Input Disable Register
                                 .equ	ADC0D	= 0	; 
                                 .equ	ADC1D	= 1	; 
                                 .equ	ADC2D	= 2	; 
                                 .equ	ADC3D	= 3	; 
                                 .equ	ADC4D	= 4	; 
                                 .equ	ADC5D	= 5	; 
                                 
                                 
                                 ; ***** ANALOG_COMPARATOR ************
                                 ; ACSR - Analog Comparator Control And Status Register
                                 .equ	ACIS0	= 0	; Analog Comparator Interrupt Mode Select bit 0
                                 .equ	ACIS1	= 1	; Analog Comparator Interrupt Mode Select bit 1
                                 .equ	ACIC	= 2	; Analog Comparator Input Capture Enable
                                 .equ	ACIE	= 3	; Analog Comparator Interrupt Enable
                                 .equ	ACI	= 4	; Analog Comparator Interrupt Flag
                                 .equ	ACO	= 5	; Analog Compare Output
                                 .equ	ACBG	= 6	; Analog Comparator Bandgap Select
                                 .equ	ACD	= 7	; Analog Comparator Disable
                                 
                                 ; DIDR1 - Digital Input Disable Register 1
                                 .equ	AIN0D	= 0	; AIN0 Digital Input Disable
                                 .equ	AIN1D	= 1	; AIN1 Digital Input Disable
                                 
                                 
                                 ; ***** PORTB ************************
                                 ; PORTB - Port B Data Register
                                 .equ	PORTB0	= 0	; Port B Data Register bit 0
                                 .equ	PB0	= 0	; For compatibility
                                 .equ	PORTB1	= 1	; Port B Data Register bit 1
                                 .equ	PB1	= 1	; For compatibility
                                 .equ	PORTB2	= 2	; Port B Data Register bit 2
                                 .equ	PB2	= 2	; For compatibility
                                 .equ	PORTB3	= 3	; Port B Data Register bit 3
                                 .equ	PB3	= 3	; For compatibility
                                 .equ	PORTB4	= 4	; Port B Data Register bit 4
                                 .equ	PB4	= 4	; For compatibility
                                 .equ	PORTB5	= 5	; Port B Data Register bit 5
                                 .equ	PB5	= 5	; For compatibility
                                 .equ	PORTB6	= 6	; Port B Data Register bit 6
                                 .equ	PB6	= 6	; For compatibility
                                 .equ	PORTB7	= 7	; Port B Data Register bit 7
                                 .equ	PB7	= 7	; For compatibility
                                 
                                 ; DDRB - Port B Data Direction Register
                                 .equ	DDB0	= 0	; Port B Data Direction Register bit 0
                                 .equ	DDB1	= 1	; Port B Data Direction Register bit 1
                                 .equ	DDB2	= 2	; Port B Data Direction Register bit 2
                                 .equ	DDB3	= 3	; Port B Data Direction Register bit 3
                                 .equ	DDB4	= 4	; Port B Data Direction Register bit 4
                                 .equ	DDB5	= 5	; Port B Data Direction Register bit 5
                                 .equ	DDB6	= 6	; Port B Data Direction Register bit 6
                                 .equ	DDB7	= 7	; Port B Data Direction Register bit 7
                                 
                                 ; PINB - Port B Input Pins
                                 .equ	PINB0	= 0	; Port B Input Pins bit 0
                                 .equ	PINB1	= 1	; Port B Input Pins bit 1
                                 .equ	PINB2	= 2	; Port B Input Pins bit 2
                                 .equ	PINB3	= 3	; Port B Input Pins bit 3
                                 .equ	PINB4	= 4	; Port B Input Pins bit 4
                                 .equ	PINB5	= 5	; Port B Input Pins bit 5
                                 .equ	PINB6	= 6	; Port B Input Pins bit 6
                                 .equ	PINB7	= 7	; Port B Input Pins bit 7
                                 
                                 
                                 ; ***** PORTC ************************
                                 ; PORTC - Port C Data Register
                                 .equ	PORTC0	= 0	; Port C Data Register bit 0
                                 .equ	PC0	= 0	; For compatibility
                                 .equ	PORTC1	= 1	; Port C Data Register bit 1
                                 .equ	PC1	= 1	; For compatibility
                                 .equ	PORTC2	= 2	; Port C Data Register bit 2
                                 .equ	PC2	= 2	; For compatibility
                                 .equ	PORTC3	= 3	; Port C Data Register bit 3
                                 .equ	PC3	= 3	; For compatibility
                                 .equ	PORTC4	= 4	; Port C Data Register bit 4
                                 .equ	PC4	= 4	; For compatibility
                                 .equ	PORTC5	= 5	; Port C Data Register bit 5
                                 .equ	PC5	= 5	; For compatibility
                                 .equ	PORTC6	= 6	; Port C Data Register bit 6
                                 .equ	PC6	= 6	; For compatibility
                                 
                                 ; DDRC - Port C Data Direction Register
                                 .equ	DDC0	= 0	; Port C Data Direction Register bit 0
                                 .equ	DDC1	= 1	; Port C Data Direction Register bit 1
                                 .equ	DDC2	= 2	; Port C Data Direction Register bit 2
                                 .equ	DDC3	= 3	; Port C Data Direction Register bit 3
                                 .equ	DDC4	= 4	; Port C Data Direction Register bit 4
                                 .equ	DDC5	= 5	; Port C Data Direction Register bit 5
                                 .equ	DDC6	= 6	; Port C Data Direction Register bit 6
                                 
                                 ; PINC - Port C Input Pins
                                 .equ	PINC0	= 0	; Port C Input Pins bit 0
                                 .equ	PINC1	= 1	; Port C Input Pins bit 1
                                 .equ	PINC2	= 2	; Port C Input Pins bit 2
                                 .equ	PINC3	= 3	; Port C Input Pins bit 3
                                 .equ	PINC4	= 4	; Port C Input Pins bit 4
                                 .equ	PINC5	= 5	; Port C Input Pins bit 5
                                 .equ	PINC6	= 6	; Port C Input Pins bit 6
                                 
                                 
                                 ; ***** PORTD ************************
                                 ; PORTD - Port D Data Register
                                 .equ	PORTD0	= 0	; Port D Data Register bit 0
                                 .equ	PD0	= 0	; For compatibility
                                 .equ	PORTD1	= 1	; Port D Data Register bit 1
                                 .equ	PD1	= 1	; For compatibility
                                 .equ	PORTD2	= 2	; Port D Data Register bit 2
                                 .equ	PD2	= 2	; For compatibility
                                 .equ	PORTD3	= 3	; Port D Data Register bit 3
                                 .equ	PD3	= 3	; For compatibility
                                 .equ	PORTD4	= 4	; Port D Data Register bit 4
                                 .equ	PD4	= 4	; For compatibility
                                 .equ	PORTD5	= 5	; Port D Data Register bit 5
                                 .equ	PD5	= 5	; For compatibility
                                 .equ	PORTD6	= 6	; Port D Data Register bit 6
                                 .equ	PD6	= 6	; For compatibility
                                 .equ	PORTD7	= 7	; Port D Data Register bit 7
                                 .equ	PD7	= 7	; For compatibility
                                 
                                 ; DDRD - Port D Data Direction Register
                                 .equ	DDD0	= 0	; Port D Data Direction Register bit 0
                                 .equ	DDD1	= 1	; Port D Data Direction Register bit 1
                                 .equ	DDD2	= 2	; Port D Data Direction Register bit 2
                                 .equ	DDD3	= 3	; Port D Data Direction Register bit 3
                                 .equ	DDD4	= 4	; Port D Data Direction Register bit 4
                                 .equ	DDD5	= 5	; Port D Data Direction Register bit 5
                                 .equ	DDD6	= 6	; Port D Data Direction Register bit 6
                                 .equ	DDD7	= 7	; Port D Data Direction Register bit 7
                                 
                                 ; PIND - Port D Input Pins
                                 .equ	PIND0	= 0	; Port D Input Pins bit 0
                                 .equ	PIND1	= 1	; Port D Input Pins bit 1
                                 .equ	PIND2	= 2	; Port D Input Pins bit 2
                                 .equ	PIND3	= 3	; Port D Input Pins bit 3
                                 .equ	PIND4	= 4	; Port D Input Pins bit 4
                                 .equ	PIND5	= 5	; Port D Input Pins bit 5
                                 .equ	PIND6	= 6	; Port D Input Pins bit 6
                                 .equ	PIND7	= 7	; Port D Input Pins bit 7
                                 
                                 
                                 ; ***** TIMER_COUNTER_0 **************
                                 ; TIMSK0 - Timer/Counter0 Interrupt Mask Register
                                 .equ	TOIE0	= 0	; Timer/Counter0 Overflow Interrupt Enable
                                 .equ	OCIE0A	= 1	; Timer/Counter0 Output Compare Match A Interrupt Enable
                                 .equ	OCIE0B	= 2	; Timer/Counter0 Output Compare Match B Interrupt Enable
                                 
                                 ; TIFR0 - Timer/Counter0 Interrupt Flag register
                                 .equ	TOV0	= 0	; Timer/Counter0 Overflow Flag
                                 .equ	OCF0A	= 1	; Timer/Counter0 Output Compare Flag 0A
                                 .equ	OCF0B	= 2	; Timer/Counter0 Output Compare Flag 0B
                                 
                                 ; TCCR0A - Timer/Counter  Control Register A
                                 .equ	WGM00	= 0	; Waveform Generation Mode
                                 .equ	WGM01	= 1	; Waveform Generation Mode
                                 .equ	COM0B0	= 4	; Compare Output Mode, Fast PWm
                                 .equ	COM0B1	= 5	; Compare Output Mode, Fast PWm
                                 .equ	COM0A0	= 6	; Compare Output Mode, Phase Correct PWM Mode
                                 .equ	COM0A1	= 7	; Compare Output Mode, Phase Correct PWM Mode
                                 
                                 ; TCCR0B - Timer/Counter Control Register B
                                 .equ	CS00	= 0	; Clock Select
                                 .equ	CS01	= 1	; Clock Select
                                 .equ	CS02	= 2	; Clock Select
                                 .equ	WGM02	= 3	; 
                                 .equ	FOC0B	= 6	; Force Output Compare B
                                 .equ	FOC0A	= 7	; Force Output Compare A
                                 
                                 ; TCNT0 - Timer/Counter0
                                 .equ	TCNT0_0	= 0	; 
                                 .equ	TCNT0_1	= 1	; 
                                 .equ	TCNT0_2	= 2	; 
                                 .equ	TCNT0_3	= 3	; 
                                 .equ	TCNT0_4	= 4	; 
                                 .equ	TCNT0_5	= 5	; 
                                 .equ	TCNT0_6	= 6	; 
                                 .equ	TCNT0_7	= 7	; 
                                 
                                 ; OCR0A - Timer/Counter0 Output Compare Register
                                 .equ	OCR0A_0	= 0	; 
                                 .equ	OCR0A_1	= 1	; 
                                 .equ	OCR0A_2	= 2	; 
                                 .equ	OCR0A_3	= 3	; 
                                 .equ	OCR0A_4	= 4	; 
                                 .equ	OCR0A_5	= 5	; 
                                 .equ	OCR0A_6	= 6	; 
                                 .equ	OCR0A_7	= 7	; 
                                 
                                 ; OCR0B - Timer/Counter0 Output Compare Register
                                 .equ	OCR0B_0	= 0	; 
                                 .equ	OCR0B_1	= 1	; 
                                 .equ	OCR0B_2	= 2	; 
                                 .equ	OCR0B_3	= 3	; 
                                 .equ	OCR0B_4	= 4	; 
                                 .equ	OCR0B_5	= 5	; 
                                 .equ	OCR0B_6	= 6	; 
                                 .equ	OCR0B_7	= 7	; 
                                 
                                 ; GTCCR - General Timer/Counter Control Register
                                 ;.equ	PSRSYNC	= 0	; Prescaler Reset Timer/Counter1 and Timer/Counter0
                                 .equ	PSR10	= PSRSYNC	; For compatibility
                                 ;.equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** EXTERNAL_INTERRUPT ***********
                                 ; EICRA - External Interrupt Control Register
                                 .equ	ISC00	= 0	; External Interrupt Sense Control 0 Bit 0
                                 .equ	ISC01	= 1	; External Interrupt Sense Control 0 Bit 1
                                 .equ	ISC10	= 2	; External Interrupt Sense Control 1 Bit 0
                                 .equ	ISC11	= 3	; External Interrupt Sense Control 1 Bit 1
                                 
                                 ; EIMSK - External Interrupt Mask Register
                                 .equ	INT0	= 0	; External Interrupt Request 0 Enable
                                 .equ	INT1	= 1	; External Interrupt Request 1 Enable
                                 
                                 ; EIFR - External Interrupt Flag Register
                                 .equ	INTF0	= 0	; External Interrupt Flag 0
                                 .equ	INTF1	= 1	; External Interrupt Flag 1
                                 
                                 ; PCICR - Pin Change Interrupt Control Register
                                 .equ	PCIE0	= 0	; Pin Change Interrupt Enable 0
                                 .equ	PCIE1	= 1	; Pin Change Interrupt Enable 1
                                 .equ	PCIE2	= 2	; Pin Change Interrupt Enable 2
                                 
                                 ; PCMSK2 - Pin Change Mask Register 2
                                 .equ	PCINT16	= 0	; Pin Change Enable Mask 16
                                 .equ	PCINT17	= 1	; Pin Change Enable Mask 17
                                 .equ	PCINT18	= 2	; Pin Change Enable Mask 18
                                 .equ	PCINT19	= 3	; Pin Change Enable Mask 19
                                 .equ	PCINT20	= 4	; Pin Change Enable Mask 20
                                 .equ	PCINT21	= 5	; Pin Change Enable Mask 21
                                 .equ	PCINT22	= 6	; Pin Change Enable Mask 22
                                 .equ	PCINT23	= 7	; Pin Change Enable Mask 23
                                 
                                 ; PCMSK1 - Pin Change Mask Register 1
                                 .equ	PCINT8	= 0	; Pin Change Enable Mask 8
                                 .equ	PCINT9	= 1	; Pin Change Enable Mask 9
                                 .equ	PCINT10	= 2	; Pin Change Enable Mask 10
                                 .equ	PCINT11	= 3	; Pin Change Enable Mask 11
                                 .equ	PCINT12	= 4	; Pin Change Enable Mask 12
                                 .equ	PCINT13	= 5	; Pin Change Enable Mask 13
                                 .equ	PCINT14	= 6	; Pin Change Enable Mask 14
                                 
                                 ; PCMSK0 - Pin Change Mask Register 0
                                 .equ	PCINT0	= 0	; Pin Change Enable Mask 0
                                 .equ	PCINT1	= 1	; Pin Change Enable Mask 1
                                 .equ	PCINT2	= 2	; Pin Change Enable Mask 2
                                 .equ	PCINT3	= 3	; Pin Change Enable Mask 3
                                 .equ	PCINT4	= 4	; Pin Change Enable Mask 4
                                 .equ	PCINT5	= 5	; Pin Change Enable Mask 5
                                 .equ	PCINT6	= 6	; Pin Change Enable Mask 6
                                 .equ	PCINT7	= 7	; Pin Change Enable Mask 7
                                 
                                 ; PCIFR - Pin Change Interrupt Flag Register
                                 .equ	PCIF0	= 0	; Pin Change Interrupt Flag 0
                                 .equ	PCIF1	= 1	; Pin Change Interrupt Flag 1
                                 .equ	PCIF2	= 2	; Pin Change Interrupt Flag 2
                                 
                                 
                                 ; ***** SPI **************************
                                 ; SPDR - SPI Data Register
                                 .equ	SPDR0	= 0	; SPI Data Register bit 0
                                 .equ	SPDR1	= 1	; SPI Data Register bit 1
                                 .equ	SPDR2	= 2	; SPI Data Register bit 2
                                 .equ	SPDR3	= 3	; SPI Data Register bit 3
                                 .equ	SPDR4	= 4	; SPI Data Register bit 4
                                 .equ	SPDR5	= 5	; SPI Data Register bit 5
                                 .equ	SPDR6	= 6	; SPI Data Register bit 6
                                 .equ	SPDR7	= 7	; SPI Data Register bit 7
                                 
                                 ; SPSR - SPI Status Register
                                 .equ	SPI2X	= 0	; Double SPI Speed Bit
                                 .equ	WCOL	= 6	; Write Collision Flag
                                 .equ	SPIF	= 7	; SPI Interrupt Flag
                                 
                                 ; SPCR - SPI Control Register
                                 .equ	SPR0	= 0	; SPI Clock Rate Select 0
                                 .equ	SPR1	= 1	; SPI Clock Rate Select 1
                                 .equ	CPHA	= 2	; Clock Phase
                                 .equ	CPOL	= 3	; Clock polarity
                                 .equ	MSTR	= 4	; Master/Slave Select
                                 .equ	DORD	= 5	; Data Order
                                 .equ	SPE	= 6	; SPI Enable
                                 .equ	SPIE	= 7	; SPI Interrupt Enable
                                 
                                 
                                 ; ***** WATCHDOG *********************
                                 ; WDTCSR - Watchdog Timer Control Register
                                 .equ	WDP0	= 0	; Watch Dog Timer Prescaler bit 0
                                 .equ	WDP1	= 1	; Watch Dog Timer Prescaler bit 1
                                 .equ	WDP2	= 2	; Watch Dog Timer Prescaler bit 2
                                 .equ	WDE	= 3	; Watch Dog Enable
                                 .equ	WDCE	= 4	; Watchdog Change Enable
                                 .equ	WDP3	= 5	; Watchdog Timer Prescaler Bit 3
                                 .equ	WDIE	= 6	; Watchdog Timeout Interrupt Enable
                                 .equ	WDIF	= 7	; Watchdog Timeout Interrupt Flag
                                 
                                 
                                 ; ***** CPU **************************
                                 ; SREG - Status Register
                                 .equ	SREG_C	= 0	; Carry Flag
                                 .equ	SREG_Z	= 1	; Zero Flag
                                 .equ	SREG_N	= 2	; Negative Flag
                                 .equ	SREG_V	= 3	; Two's Complement Overflow Flag
                                 .equ	SREG_S	= 4	; Sign Bit
                                 .equ	SREG_H	= 5	; Half Carry Flag
                                 .equ	SREG_T	= 6	; Bit Copy Storage
                                 .equ	SREG_I	= 7	; Global Interrupt Enable
                                 
                                 ; OSCCAL - Oscillator Calibration Value
                                 .equ	CAL0	= 0	; Oscillator Calibration Value Bit0
                                 .equ	CAL1	= 1	; Oscillator Calibration Value Bit1
                                 .equ	CAL2	= 2	; Oscillator Calibration Value Bit2
                                 .equ	CAL3	= 3	; Oscillator Calibration Value Bit3
                                 .equ	CAL4	= 4	; Oscillator Calibration Value Bit4
                                 .equ	CAL5	= 5	; Oscillator Calibration Value Bit5
                                 .equ	CAL6	= 6	; Oscillator Calibration Value Bit6
                                 .equ	CAL7	= 7	; Oscillator Calibration Value Bit7
                                 
                                 ; CLKPR - Clock Prescale Register
                                 .equ	CLKPS0	= 0	; Clock Prescaler Select Bit 0
                                 .equ	CLKPS1	= 1	; Clock Prescaler Select Bit 1
                                 .equ	CLKPS2	= 2	; Clock Prescaler Select Bit 2
                                 .equ	CLKPS3	= 3	; Clock Prescaler Select Bit 3
                                 .equ	CLKPCE	= 7	; Clock Prescaler Change Enable
                                 
                                 ; SPMCSR - Store Program Memory Control and Status Register
                                 .equ    SELFPRGEN = 0; Added for backwards compatibility
                                 .equ	SPMEN	= 0	; Store Program Memory
                                 .equ	PGERS	= 1	; Page Erase
                                 .equ	PGWRT	= 2	; Page Write
                                 .equ	BLBSET	= 3	; Boot Lock Bit Set
                                 .equ	RWWSRE	= 4	; Read-While-Write section read enable
                                 .equ    SIGRD   = 5 ; Signature Row Read
                                 .equ	RWWSB	= 6	; Read-While-Write Section Busy
                                 .equ	SPMIE	= 7	; SPM Interrupt Enable
                                 
                                 ; MCUCR - MCU Control Register
                                 .equ	IVCE	= 0	; 
                                 .equ	IVSEL	= 1	; 
                                 .equ	PUD	= 4	; 
                                 .equ	BODSE	= 5	; BOD Sleep Enable
                                 .equ	BODS	= 6	; BOD Sleep
                                 
                                 ; MCUSR - MCU Status Register
                                 .equ	PORF	= 0	; Power-on reset flag
                                 .equ	EXTRF	= 1	; External Reset Flag
                                 .equ	EXTREF	= EXTRF	; For compatibility
                                 .equ	BORF	= 2	; Brown-out Reset Flag
                                 .equ	WDRF	= 3	; Watchdog Reset Flag
                                 
                                 ; SMCR - Sleep Mode Control Register
                                 .equ	SE	= 0	; Sleep Enable
                                 .equ	SM0	= 1	; Sleep Mode Select Bit 0
                                 .equ	SM1	= 2	; Sleep Mode Select Bit 1
                                 .equ	SM2	= 3	; Sleep Mode Select Bit 2
                                 
                                 ; GPIOR2 - General Purpose I/O Register 2
                                 .equ	GPIOR20	= 0	; 
                                 .equ	GPIOR21	= 1	; 
                                 .equ	GPIOR22	= 2	; 
                                 .equ	GPIOR23	= 3	; 
                                 .equ	GPIOR24	= 4	; 
                                 .equ	GPIOR25	= 5	; 
                                 .equ	GPIOR26	= 6	; 
                                 .equ	GPIOR27	= 7	; 
                                 
                                 ; GPIOR1 - General Purpose I/O Register 1
                                 .equ	GPIOR10	= 0	; 
                                 .equ	GPIOR11	= 1	; 
                                 .equ	GPIOR12	= 2	; 
                                 .equ	GPIOR13	= 3	; 
                                 .equ	GPIOR14	= 4	; 
                                 .equ	GPIOR15	= 5	; 
                                 .equ	GPIOR16	= 6	; 
                                 .equ	GPIOR17	= 7	; 
                                 
                                 ; GPIOR0 - General Purpose I/O Register 0
                                 .equ	GPIOR00	= 0	; 
                                 .equ	GPIOR01	= 1	; 
                                 .equ	GPIOR02	= 2	; 
                                 .equ	GPIOR03	= 3	; 
                                 .equ	GPIOR04	= 4	; 
                                 .equ	GPIOR05	= 5	; 
                                 .equ	GPIOR06	= 6	; 
                                 .equ	GPIOR07	= 7	; 
                                 
                                 ; PRR - Power Reduction Register
                                 .equ	PRADC	= 0	; Power Reduction ADC
                                 .equ	PRUSART0	= 1	; Power Reduction USART
                                 .equ	PRSPI	= 2	; Power Reduction Serial Peripheral Interface
                                 .equ	PRTIM1	= 3	; Power Reduction Timer/Counter1
                                 .equ	PRTIM0	= 5	; Power Reduction Timer/Counter0
                                 .equ	PRTIM2	= 6	; Power Reduction Timer/Counter2
                                 .equ	PRTWI	= 7	; Power Reduction TWI
                                 
                                 
                                 ; ***** EEPROM ***********************
                                 ; EEARL - EEPROM Address Register Low Byte
                                 .equ	EEAR0	= 0	; EEPROM Read/Write Access Bit 0
                                 .equ	EEAR1	= 1	; EEPROM Read/Write Access Bit 1
                                 .equ	EEAR2	= 2	; EEPROM Read/Write Access Bit 2
                                 .equ	EEAR3	= 3	; EEPROM Read/Write Access Bit 3
                                 .equ	EEAR4	= 4	; EEPROM Read/Write Access Bit 4
                                 .equ	EEAR5	= 5	; EEPROM Read/Write Access Bit 5
                                 .equ	EEAR6	= 6	; EEPROM Read/Write Access Bit 6
                                 .equ	EEAR7	= 7	; EEPROM Read/Write Access Bit 7
                                 
                                 ; EEARH - EEPROM Address Register High Byte
                                 .equ	EEAR8	= 0	; EEPROM Read/Write Access Bit 8
                                 .equ	EEAR9	= 1	; EEPROM Read/Write Access Bit 9
                                 
                                 ; EEDR - EEPROM Data Register
                                 .equ	EEDR0	= 0	; EEPROM Data Register bit 0
                                 .equ	EEDR1	= 1	; EEPROM Data Register bit 1
                                 .equ	EEDR2	= 2	; EEPROM Data Register bit 2
                                 .equ	EEDR3	= 3	; EEPROM Data Register bit 3
                                 .equ	EEDR4	= 4	; EEPROM Data Register bit 4
                                 .equ	EEDR5	= 5	; EEPROM Data Register bit 5
                                 .equ	EEDR6	= 6	; EEPROM Data Register bit 6
                                 .equ	EEDR7	= 7	; EEPROM Data Register bit 7
                                 
                                 ; EECR - EEPROM Control Register
                                 .equ	EERE	= 0	; EEPROM Read Enable
                                 .equ	EEPE	= 1	; EEPROM Write Enable
                                 .equ	EEMPE	= 2	; EEPROM Master Write Enable
                                 .equ	EERIE	= 3	; EEPROM Ready Interrupt Enable
                                 .equ	EEPM0	= 4	; EEPROM Programming Mode Bit 0
                                 .equ	EEPM1	= 5	; EEPROM Programming Mode Bit 1
                                 
                                 
                                 
                                 ; ***** LOCKSBITS ********************************************************
                                 .equ	LB1	= 0	; Lock bit
                                 .equ	LB2	= 1	; Lock bit
                                 .equ	BLB01	= 2	; Boot Lock bit
                                 .equ	BLB02	= 3	; Boot Lock bit
                                 .equ	BLB11	= 4	; Boot lock bit
                                 .equ	BLB12	= 5	; Boot lock bit
                                 
                                 
                                 ; ***** FUSES ************************************************************
                                 ; LOW fuse bits
                                 .equ	CKSEL0	= 0	; Select Clock Source
                                 .equ	CKSEL1	= 1	; Select Clock Source
                                 .equ	CKSEL2	= 2	; Select Clock Source
                                 .equ	CKSEL3	= 3	; Select Clock Source
                                 .equ	SUT0	= 4	; Select start-up time
                                 .equ	SUT1	= 5	; Select start-up time
                                 .equ	CKOUT	= 6	; Clock output
                                 .equ	CKDIV8	= 7	; Divide clock by 8
                                 
                                 ; HIGH fuse bits
                                 .equ	BOOTRST	= 0	; Select reset vector
                                 .equ	BOOTSZ0	= 1	; Select boot size
                                 .equ	BOOTSZ1	= 2	; Select boot size
                                 .equ	EESAVE	= 3	; EEPROM memory is preserved through chip erase
                                 .equ	WDTON	= 4	; Watchdog Timer Always On
                                 .equ	SPIEN	= 5	; Enable Serial programming and Data Downloading
                                 .equ	DWEN	= 6	; debugWIRE Enable
                                 .equ	RSTDISBL	= 7	; External reset disable
                                 
                                 ; EXTENDED fuse bits
                                 .equ	BODLEVEL0	= 0	; Brown-out Detector trigger level
                                 .equ	BODLEVEL1	= 1	; Brown-out Detector trigger level
                                 .equ	BODLEVEL2	= 2	; Brown-out Detector trigger level
                                 
                                 
                                 
                                 ; ***** CPU REGISTER DEFINITIONS *****************************************
                                 .def	XH	= r27
                                 .def	XL	= r26
                                 .def	YH	= r29
                                 .def	YL	= r28
                                 .def	ZH	= r31
                                 .def	ZL	= r30
                                 
                                 
                                 
                                 ; ***** DATA MEMORY DECLARATIONS *****************************************
                                 .equ	FLASHEND	= 0x3fff	; Note: Word address
                                 .equ	IOEND	= 0x00ff
                                 .equ	SRAM_START	= 0x0100
                                 .equ	SRAM_SIZE	= 2048
                                 .equ	RAMEND	= 0x08ff
                                 .equ	XRAMEND	= 0x0000
                                 .equ	E2END	= 0x03ff
                                 .equ	EEPROMEND	= 0x03ff
                                 .equ	EEADRBITS	= 10
                                 #pragma AVRPART MEMORY PROG_FLASH 32768
                                 #pragma AVRPART MEMORY EEPROM 1024
                                 #pragma AVRPART MEMORY INT_SRAM SIZE 2048
                                 #pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                                 
                                 
                                 
                                 ; ***** BOOTLOADER DECLARATIONS ******************************************
                                 .equ	NRWW_START_ADDR	= 0x3800
                                 .equ	NRWW_STOP_ADDR	= 0x3fff
                                 .equ	RWW_START_ADDR	= 0x0
                                 .equ	RWW_STOP_ADDR	= 0x37ff
                                 .equ	PAGESIZE	= 64
                                 .equ	FIRSTBOOTSTART	= 0x3f00
                                 .equ	SECONDBOOTSTART	= 0x3e00
                                 .equ	THIRDBOOTSTART	= 0x3c00
                                 .equ	FOURTHBOOTSTART	= 0x3800
                                 .equ	SMALLBOOTSTART	= FIRSTBOOTSTART
                                 .equ	LARGEBOOTSTART	= FOURTHBOOTSTART
                                 
                                 
                                 
                                 ; ***** INTERRUPT VECTORS ************************************************
                                 .equ	INT0addr	= 0x0002	; External Interrupt Request 0
                                 .equ	INT1addr	= 0x0004	; External Interrupt Request 1
                                 .equ	PCI0addr	= 0x0006	; Pin Change Interrupt Request 0
                                 .equ	PCI1addr	= 0x0008	; Pin Change Interrupt Request 0
                                 .equ	PCI2addr	= 0x000a	; Pin Change Interrupt Request 1
                                 .equ	WDTaddr	= 0x000c	; Watchdog Time-out Interrupt
                                 .equ	OC2Aaddr	= 0x000e	; Timer/Counter2 Compare Match A
                                 .equ	OC2Baddr	= 0x0010	; Timer/Counter2 Compare Match A
                                 .equ	OVF2addr	= 0x0012	; Timer/Counter2 Overflow
                                 .equ	ICP1addr	= 0x0014	; Timer/Counter1 Capture Event
                                 .equ	OC1Aaddr	= 0x0016	; Timer/Counter1 Compare Match A
                                 .equ	OC1Baddr	= 0x0018	; Timer/Counter1 Compare Match B
                                 .equ	OVF1addr	= 0x001a	; Timer/Counter1 Overflow
                                 .equ	OC0Aaddr	= 0x001c	; TimerCounter0 Compare Match A
                                 .equ	OC0Baddr	= 0x001e	; TimerCounter0 Compare Match B
                                 .equ	OVF0addr	= 0x0020	; Timer/Couner0 Overflow
                                 .equ	SPIaddr	= 0x0022	; SPI Serial Transfer Complete
                                 .equ	URXCaddr	= 0x0024	; USART Rx Complete
                                 .equ	UDREaddr	= 0x0026	; USART, Data Register Empty
                                 .equ	UTXCaddr	= 0x0028	; USART Tx Complete
                                 .equ	ADCCaddr	= 0x002a	; ADC Conversion Complete
                                 .equ	ERDYaddr	= 0x002c	; EEPROM Ready
                                 .equ	ACIaddr	= 0x002e	; Analog Comparator
                                 .equ	TWIaddr	= 0x0030	; Two-wire Serial Interface
                                 .equ	SPMRaddr	= 0x0032	; Store Program Memory Read
                                 
                                 .equ	INT_VECTORS_SIZE	= 52	; size in words
                                 
                                 #endif  /* _M328PDEF_INC_ */
                                 
                                 ; ***** END OF FILE ******************************************************
                                 
                                 // Universidad del Valle de Guatemala
                                 // IE2023: Programacion de microcontroladores
                                 // Proyecto: Proyecto.asm
                                 // Created: 5/3/2024 12:18:45
                                 // Author : alane
                                 //*****************************************************************************
                                 // Encabezado
                                 //*****************************************************************************
                                 .INCLUDE "M328PDEF.inc"
                                 
                                 ;***** Created: 2011-02-09 12:03 ******* Source: ATmega328P.xml **********
                                 ;*************************************************************************
                                 ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
                                 ;* 
                                 ;* Number            : AVR000
                                 ;* File Name         : "m328Pdef.inc"
                                 ;* Title             : Register/Bit Definitions for the ATmega328P
                                 ;* Date              : 2011-02-09
                                 ;* Version           : 2.35
                                 ;* Support E-mail    : avr@atmel.com
                                 ;* Target MCU        : ATmega328P
                                 ;* 
                                 ;* DESCRIPTION
                                 ;* When including this file in the assembly program file, all I/O register 
                                 ;* names and I/O register bit names appearing in the data book can be used.
                                 ;* In addition, the six registers forming the three data pointers X, Y and 
                                 ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
                                 ;* SRAM is also defined 
                                 ;* 
                                 ;* The Register names are represented by their hexadecimal address.
                                 ;* 
                                 ;* The Register Bit names are represented by their bit number (0-7).
                                 ;* 
                                 ;* Please observe the difference in using the bit names with instructions
                                 ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc"
                                 ;* (skip if bit in register set/cleared). The following example illustrates
                                 ;* this:
                                 ;* 
                                 ;* in    r16,PORTB             ;read PORTB latch
                                 ;* sbr   r16,(1<<PB6)+(1<<PB5) ;set PB6 and PB5 (use masks, not bit#)
                                 ;* out   PORTB,r16             ;output to PORTB
                                 ;* 
                                 ;* in    r16,TIFR              ;read the Timer Interrupt Flag Register
                                 ;* sbrc  r16,TOV0              ;test the overflow flag (use bit#)
                                 ;* rjmp  TOV0_is_set           ;jump if set
                                 ;* ...                         ;otherwise do something else
                                 ;*************************************************************************
                                 
                                 #ifndef _M328PDEF_INC_
                                 #endif  /* _M328PDEF_INC_ */
                                 
                                 ; ***** END OF FILE ******************************************************
                                 .equ T1Value = 0x0BDC
                                 //.equ T1Value = 0xFE17
                                 .CSEG //Inicio del código
                                 .ORG 0x00 
000000 940c 0022                 	JMP MAIN			//Vector reset
                                 .org 0x08				//Vector interrupçion puerto b
000008 940c 01ef                 	JMP ISR_PCINT0
                                 .ORG 0x001A
00001a 940c 0256                 	JMP TIM1_OVF
                                 .org 0x0020
000020 940c 02f9                 	JMP TIM0_OVF
                                 MAIN:
                                 //*****************************************************************************
                                 // Stack Pointer
                                 //*****************************************************************************
000022 ef0f                      	LDI R16, LOW(RAMEND)
000023 bf0d                      	OUT SPL, R16
000024 e018                      	LDI R17, HIGH(RAMEND)
000025 bf1e                      	OUT SPH, R17
                                 //*****************************************************************************
                                 // Tabla de Valores
                                 //*****************************************************************************
000026 7940
000027 3024
000028 1219
000029 7802
00002a 1000                      	TABLA7SEG: .DB 0b100_0000, 0b111_1001, 0b010_0100, 0b011_0000, 0b001_1001, 0b001_0010, 0b000_0010, 0b111_1000, 0b000_0000, 0b001_0000
                                 //*****************************************************************************
                                 // Configuracion
                                 //*****************************************************************************
                                 Setup:
                                 //7 SEGMENTOS
00002b e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
00002c e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
                                 
                                 
00002d ef0f                      	LDI R16, 0b1111_1111
00002e b90a                      	OUT DDRD, R16
                                 
00002f e300                      	LDI R16, 0b0011_0000
000030 b904                      	OUT DDRB, R16
                                 
000031 e30f                      	LDI R16, 0b0011_1111
000032 b907                      	OUT DDRC, R16
                                 
000033 e00f                      	LDI R16, 0b0000_1111
000034 b905                      	OUT PORTB, R16
                                 
000035 e001                      	LDI R16,0b0001//pines de control
000036 9300 0068                 	STS PCICR,R16
                                 
000038 e001                      	LDI R16, 0b0000_0001
000039 9300 006f                 	STS TIMSK1, R16
                                 
                                 
00003b e00f                      	LDI R16, 0b0000_1111 //coloca la máscara a lo pines pertenecientes
00003c 9300 006b                 	STS PCMSK0, R16
                                 	
00003e 940e 01df                 	CALL IdelayT0
000040 940e 01e4                 	CALL IdelayT1	
                                 
000042 9478                      	SEI		
                                 
                                 //*******************************************************
                                 // Apagar tx y rx
                                 //*******************************************************
000043 e000                      	LDI R16, 0x00
000044 9300 00c1                 	STS UCSR0B, R16
                                 
000046 e000                      	LDI R16, 0
000047 e010                      	LDI R17, 0
000048 e020                      	LDI R18, 0
000049 e030                      	LDI R19, 0 
00004a e040                      	LDI R20, 0
00004b e050                      	LDI R21, 0 
00004c e060                      	LDI R22, 0
00004d e070                      	LDI R23, 0
00004e e080                      	LDI R24, 0 //libre
00004f e090                      	LDI R25, 0
000050 e0a0                      	LDI R26, 0
000051 e0b0                      	LDI R27, 0
000052 e0c0                      	LDI R28, 0
000053 e0d0                      	LDI R29, 0
000054 2400                      	CLR R0
000055 2411                      	CLR R1
000056 2422                      	CLR R2
000057 2433                      	CLR R3
000058 2444                      	CLR R4
000059 24aa                      	CLR R10
00005a 24ff                      	CLR R15
00005b 9403                      	INC R0 //DIA 0
                                 	//R2 DIA 1
                                 	
00005c 9413                      	INC R1 //Contador de mes
00005d 9433                      	INC R3 //MES 0
                                 	// R4 MES 0
                                 
00005e 2455                      	CLR R5 //OR para configurar distintos modos
00005f 2466                      	CLR R6 //Variable de modificacion
000060 2477                      	CLR R7 //Variable de eleccion de display (Unidades, decenas, etc.)
000061 2488                      	CLR R8 // TEMP 
000062 24bb                      	CLR R11
000063 24cc                      	CLR R12
000064 24dd                      	CLR R13
000065 24ee                      	CLR R14
000066 9533                      	INC R19
                                 //*******************************************************
                                 // LOOP
                                 //*******************************************************
                                 loop:
                                 	
000067 ff30                      	SBRS R19, 0
000068 c069                      	RJMP ESTADOFECHA
                                 //*****************************************************************
                                 //                            HORA
                                 //*****************************************************************
                                 ESTADORELOJ: 
000069 fc70                      	SBRC R7, 0
00006a 2e67                      	MOV R6, R23
00006b fe70                      	SBRS R7, 0
00006c 2e66                      	MOV R6, R22
00006d 9844                      	CBI PORTC, PC4
00006e 9845                      	CBI PORTC, PC5
00006f e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
000070 e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
000071 0fe6                      	ADD ZL, R22
000072 9a41                      	SBI PORTC, PC1
000073 9144                      	LPM R20, Z
000074 b94b                      	OUT PORTD, R20
000075 940e 01d8                 	CALL delaybounce3
000077 9841                      	CBI PORTC, PC1
                                 
                                 
000078 e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
000079 e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
00007a 0fe2                      	ADD ZL, R18
00007b 9a40                      	SBI PORTC, PC0
00007c 9144                      	LPM R20, Z
00007d b94b                      	OUT PORTD, R20
                                 
00007e 940e 01d8                 	CALL delaybounce3
                                 
000080 9840                      	CBI PORTC, PC0
                                 
000081 e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
000082 e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
000083 0fe7                      	ADD ZL, R23
000084 9a42                      	SBI PORTC, PC2
000085 9144                      	LPM R20, Z
000086 b94b                      	OUT PORTD, R20
000087 ffb0                      	SBRS r27, 0
000088 c001                      	RJMP PP1
000089 c002                      	RJMP PP2
                                 PP1:
00008a 9a5f                      	SBI PORTD, PD7
00008b c002                      	RJMP Seguir
                                 PP2:
00008c 985f                      	CBI PORTD, PD7
00008d c000                      	RJMP Seguir
                                 Seguir:
00008e 940e 01d8                 	CALL delaybounce3
000090 9842                      	CBI PORTC, PC2
                                 
000091 e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
000092 e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
000093 0fe9                      	ADD ZL, R25
000094 9a43                      	SBI PORTC, PC3
000095 9144                      	LPM R20, Z
000096 b94b                      	OUT PORTD, R20
000097 940e 01d8                 	CALL delaybounce3
000099 9843                      	CBI PORTC, PC3
00009a ff33                      	SBRS R19, 3
00009b c134                      	RJMP ENCENDERMASK
00009c c000                      	RJMP CONFIH
                                 //*****************************************************************
                                 //CONFIGURACION DE HORA
                                 //*****************************************************************
                                 CONFIH:
00009d 9a2d                      	SBI PORTB, PB5
00009e e000                      	LDI R16, 0b0000_0000
00009f 9300 006f                 	STS TIMSK1, R16
                                 	
0000a1 fc70                      	SBRC R7, 0
0000a2 c015                      	RJMP CONFIVERI2
                                 CONFIVERI1:
0000a3 2d66                      	MOV R22, R6					
0000a4 306a                      	CPI R22, 0b000_1010             //Contador de minutos
0000a5 f059                      	BREQ OVERFLOCONFI
0000a6 3f6f                      	CPI R22, 0b1111_1111
0000a7 f009                      	BREQ UNDERFLOCONFI
0000a8 cfbe                      	RJMP loop
                                 
                                 UNDERFLOCONFI:
0000a9 e069                      	LDI R22, 9
0000aa 952a                      	DEC R18
0000ab 3f2f                      	CPI R18, 0xFF
0000ac f419                      	BRNE CONFIA1
0000ad e069                      	LDI R22, 9
0000ae e025                      	LDI R18, 5
0000af cfb7                      	RJMP loop
                                 CONFIA1:
0000b0 cfb6                      	RJMP loop
                                 OVERFLOCONFI:
0000b1 2766                      	CLR R22
0000b2 9523                      	INC R18                         //Contador de decenas
0000b3 3026                      	CPI R18, 0b000_0110
0000b4 f009                      	BREQ OVERFLOCONFI2
0000b5 cfb1                      	RJMP loop
                                 OVERFLOCONFI2:
0000b6 2722                      	CLR R18
0000b7 cfaf                      	RJMP loop
                                 
                                 CONFIVERI2:
0000b8 2d76                      	MOV R23, R6
0000b9 3f7f                      	CPI R23, 0b1111_1111
0000ba f039                      	BREQ UNDERFLOCONFI2
0000bb 3092                      	CPI R25, 0b000_0010
0000bc f079                      	BREQ CONFITOP24                       //Contador de horas
0000bd 307a                      	CPI R23, 0b000_1010
0000be f051                      	BREQ OVERFLOCONFI3
0000bf 3f7f                      	CPI R23, 0b1111_1111
0000c0 f009                      	BREQ UNDERFLOCONFI2
0000c1 cfa5                      	rjmp loop
                                 UNDERFLOCONFI2:
0000c2 e079                      	LDI R23, 9
0000c3 959a                      	DEC R25
0000c4 3f9f                      	CPI R25, 0b1111_1111
0000c5 f459                      	BRNE CONFIFIN
0000c6 e092                      	LDI R25, 2
0000c7 e073                      	LDI R23, 3
0000c8 cf9e                      	RJMP loop
                                 OVERFLOCONFI3:
0000c9 2777                      	CLR R23
0000ca 9593                      	INC R25                         //Contador de decenas de horas
0000cb cf9b                      	rjmp loop
                                 CONFITOP24:
0000cc 3074                      	CPI R23, 0b0000_0100
0000cd f009                      	BREQ CONFITOP2
0000ce cf98                      	RJMP loop
                                 CONFITOP2:
0000cf 2777                      	CLR R23
0000d0 2799                      	CLR R25
                                 CONFIFIN:
0000d1 cf95                      	RJMP loop
                                 //*****************************************************************
                                 //                            FECHA
                                 //*****************************************************************
                                 ESTADOFECHA:
0000d2 ff31                      	SBRS R19, 1
0000d3 c091                      	RJMP ESTADOALARMA
0000d4 9a44                      	SBI PORTC, PC4
0000d5 9845                      	CBI PORTC, PC5
                                 
0000d6 e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
0000d7 e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
0000d8 0de0                      	ADD ZL, R0
0000d9 9a41                      	SBI PORTC, PC1
0000da 9144                      	LPM R20, Z
0000db b94b                      	OUT PORTD, R20
0000dc 940e 01d8                 	CALL delaybounce3
0000de 9841                      	CBI PORTC, PC1
                                 
                                 
0000df e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
0000e0 e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
0000e1 0de2                      	ADD ZL, R2
0000e2 9a40                      	SBI PORTC, PC0
0000e3 9144                      	LPM R20, Z
0000e4 b94b                      	OUT PORTD, R20
                                 
0000e5 940e 01d8                 	CALL delaybounce3
                                 
0000e7 9840                      	CBI PORTC, PC0
                                 
0000e8 e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
0000e9 e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
0000ea 0de3                      	ADD ZL, R3
0000eb 9a42                      	SBI PORTC, PC2
0000ec 9144                      	LPM R20, Z
0000ed b94b                      	OUT PORTD, R20
0000ee 940e 01d8                 	CALL delaybounce3
0000f0 9842                      	CBI PORTC, PC2
                                 
0000f1 e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
0000f2 e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
0000f3 0de4                      	ADD ZL, R4
0000f4 9a43                      	SBI PORTC, PC3
0000f5 9144                      	LPM R20, Z
0000f6 b94b                      	OUT PORTD, R20
0000f7 940e 01d8                 	CALL delaybounce3
0000f9 9843                      	CBI PORTC, PC3
0000fa ff33                      	SBRS R19, 3
0000fb c0d4                      	RJMP ENCENDERMASK
0000fc c000                      	RJMP CONFIF
                                 //*****************************************************************
                                 //CONFIGURACION DE FECHA
                                 //*****************************************************************
                                 CONFIF:
0000fd e000                      	LDI R16, 0b0000_0000
0000fe 9300 006f                 	STS TIMSK1, R16
                                 	
000100 fc70                      	SBRC R7, 0
000101 c045                      	RJMP CONFINM
                                 //********************************************************************************************************************************************
                                 //------------------------------------------------------------DIA-----------------------------------------------------------------------------
                                 //********************************************************************************************************************************************
                                 CONFIFECHA1:
000102 9a2d                      	SBI PORTB, PB5
000103 2c06                      	MOV R0, R6
000104 1409                      	CP R0, R9
000105 f051                      	BREQ CONFINICRE7
000106 e082                      	LDI R24, 2
000107 1618                      	CP R1, R24
000108 f441                      	BRNE CONFICOMP
000109 e082                      	LDI R24, 2
00010a 1628                      	CP R2, R24
00010b f429                      	BRNE CONFICOMP
00010c e089                      	LDI R24, 9
00010d 1608                      	CP R0, R24
00010e f5c4                      	BRGE CONFINM
00010f cf57                      	RJMP loop
                                 CONFINICRE7:
000110 cf56                      	RJMP loop
                                 CONFICOMP:
000111 e083                      	LDI R24, 3
000112 1628                      	CP R2, R24
000113 f424                      	BRGE CONFITOPDIA
                                 CONFISUMANORM:
000114 e08a                      	LDI R24, 10
000115 1608                      	CP R0, R24
000116 f55c                      	BRGE CONFICD
                                 
000117 cf4f                      	RJMP loop
                                 CONFITOPDIA:
000118 e081                      	LDI R24, 1
000119 1618                      	CP R1, R24
00011a f0f9                      	BREQ CONFIPR1
                                 
00011b e083                      	LDI R24, 3
00011c 1618                      	CP R1, R24
00011d f0e1                      	BREQ CONFIPR1
                                 
00011e e084                      	LDI R24, 4
00011f 1618                      	CP R1, R24
000120 f0e9                      	BREQ CONFIPR2
                                 
000121 e085                      	LDI R24, 5
000122 1618                      	CP R1, R24
000123 f0b1                      	BREQ CONFIPR1
                                 
000124 e086                      	LDI R24, 6
000125 1618                      	CP R1, R24
000126 f0b9                      	BREQ CONFIPR2
                                 
000127 e087                      	LDI R24, 7
000128 1618                      	CP R1, R24
000129 f081                      	BREQ CONFIPR1
                                 
00012a e088                      	LDI R24, 8
00012b 1618                      	CP R1, R24
00012c f069                      	BREQ CONFIPR1
                                 
00012d e089                      	LDI R24, 9
00012e 1618                      	CP R1, R24
00012f f071                      	BREQ CONFIPR2
                                 
000130 e08a                      	LDI R24, 10
000131 1618                      	CP R1, R24
000132 f039                      	BREQ CONFIPR1
                                 
000133 e08b                      	LDI R24, 11
000134 1618                      	CP R1, R24
000135 f041                      	BREQ CONFIPR2
                                 
000136 e08c                      	LDI R24, 12
000137 1618                      	CP R1, R24
000138 f009                      	BREQ CONFIPR1
                                 
000139 cf2d                      	rjmp loop
                                 CONFIPR1:
00013a e082                      	LDI R24, 2
00013b 1608                      	CP R0, R24
00013c f42c                      	BRGE CONFICD
00013d cf29                      	RJMP loop
                                 CONFIPR2:
00013e e081                      	LDI R24, 1
00013f 1608                      	CP R0, R24
000140 f40c                      	BRGE CONFICD
000141 cf25                      	RJMP loop
                                 
                                 CONFICD:
000142 2400                      	CLR R0
000143 9423                      	INC R2
000144 cf22                      	RJMP loop
                                 SALTO: 
000145 2c90                      	MOV R9, R0
000146 cf20                      	RJMP loop
                                 
                                 //********************************************************************************************************************************************
                                 //------------------------------------------------------------MES-----------------------------------------------------------------------------
                                 //********************************************************************************************************************************************
                                 CONFINM:
000147 2c36                      	MOV R3, R6
000148 e081                      	LDI R24, 1
000149 1648                      	CP R4, R24
00014a f454                      	BRGE CONFITOPMES
00014b 1439                      	CP R3, R9
00014c f409                      	BRNE CONFINICRE5
00014d 9413                      	INC R1
                                 CONFINICRE5:
00014e e08a                      	LDI R24, 10
00014f 1638                      	CP R3, R24
000150 f40c                      	BRGE CONFITOPNMES
000151 c010                      	RJMP SALTO2
                                 CONFITOPNMES:
000152 2433                      	CLR R3
000153 9443                      	INC R4
000154 c00d                      	RJMP SALTO2
                                 CONFITOPMES:
000155 1439                      	CP R3, R9
000156 f409                      	BRNE CONFINICRE6
000157 9413                      	INC R1
                                 CONFINICRE6:
000158 e083                      	LDI R24, 3
000159 1638                      	CP R3, R24
00015a f40c                      	BRGE CONFICM
00015b c006                      	RJMP SALTO2
                                 CONFICM:
00015c 2411                      	CLR R1
00015d 2433                      	CLR R3
00015e 2444                      	CLR R4
00015f 9433                      	INC R3
000160 2c93                      	MOV R9, R3
000161 c000                      	RJMP SALTO2
                                 SALTO2:
000162 2c93                      	MOV R9, R3
000163 cf03                      	RJMP loop
000164 cf02                      	RJMP loop
                                 //*****************************************************************
                                 //                          ALARMA
                                 //*****************************************************************
                                 ESTADOALARMA:
000165 ff32                      	SBRS R19, 2
000166 cf00                      	RJMP loop
000167 9844                      	CBI PORTC, PC4
000168 9a45                      	SBI PORTC, PC5
                                 	// DIPLAY 1
000169 e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
00016a e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
00016b 0deb                      	ADD ZL, R11
00016c 9a41                      	SBI PORTC, PC1
00016d 9144                      	LPM R20, Z
00016e b94b                      	OUT PORTD, R20
00016f 940e 01d8                 	CALL delaybounce3
000171 9841                      	CBI PORTC, PC1
                                 
                                 	// DIPLAY 2
000172 e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
000173 e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
000174 0dec                      	ADD ZL, R12
000175 9a40                      	SBI PORTC, PC0
000176 9144                      	LPM R20, Z
000177 b94b                      	OUT PORTD, R20
000178 940e 01d8                 	CALL delaybounce3
00017a 9840                      	CBI PORTC, PC0
                                 
                                 	// DIPLAY 3
00017b e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
00017c e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
00017d 0ded                      	ADD ZL, R13
00017e 9a42                      	SBI PORTC, PC2
00017f 9144                      	LPM R20, Z
000180 b94b                      	OUT PORTD, R20
000181 940e 01d8                 	CALL delaybounce3
000183 9842                      	CBI PORTC, PC2
                                 
                                 	// DIPLAY 4
000184 e0f0                      	LDI ZH, HIGH(TABLA7SEG << 1)
000185 e4ec                      	LDI ZL, LOW(TABLA7SEG << 1)
000186 0dee                      	ADD ZL, R14
000187 9a43                      	SBI PORTC, PC3
000188 9144                      	LPM R20, Z
000189 b94b                      	OUT PORTD, R20
00018a 940e 01d8                 	CALL delaybounce3
00018c 9843                      	CBI PORTC, PC3
                                 
00018d ff33                      	SBRS R19, 3
00018e ced8                      	RJMP loop
00018f c000                      	RJMP CONFIA
                                 //*****************************************************************
                                 //                          CONFIGURACION DE ALARMA
                                 //*****************************************************************
                                 CONFIA:
000190 9a2d                      	SBI PORTB, PB5
000191 fc70                      	SBRC R7, 0
000192 c01b                      	RJMP CONFIVERI6
                                 CONFIVERI5:
000193 e08a                      	LDI R24, 0b000_1010	
000194 16b8                      	CP R11, R24             //Contador de minutos
000195 f081                      	BREQ OVERFLOCONFI5
000196 ef8f                      	LDI R24, 0b1111_1111	
000197 16b8                      	CP R11, R24   
000198 f009                      	BREQ UNDERFLOCONFI5
000199 cecd                      	RJMP loop
                                 
                                 UNDERFLOCONFI5:
00019a e089                      	LDI R24, 9
00019b 2eb8                      	MOV R11, R24
00019c 94ca                      	DEC R12
00019d ef8f                      	LDI R24, 0xFF
00019e 16c8                      	CP R12, R24
00019f f429                      	BRNE CONFIA5
0001a0 e089                      	LDI R24, 9
0001a1 2eb8                      	MOV R11, R24
0001a2 e085                      	LDI R24, 5
0001a3 2ec8                      	MOV R12, R24
0001a4 cec2                      	RJMP loop
                                 CONFIA5:
0001a5 cec1                      	RJMP loop
                                 OVERFLOCONFI5:
0001a6 24bb                      	CLR R11
0001a7 94c3                      	INC R12
0001a8 e086                      	LDI R24, 0b000_0110                         //Contador de decenas
0001a9 158c                      	CP R24, R12
0001aa f009                      	BREQ OVERFLOCONFI6
0001ab cebb                      	RJMP loop
                                 OVERFLOCONFI6:
0001ac 24cc                      	CLR R12
0001ad ceb9                      	RJMP loop
                                 
                                 CONFIVERI6:
0001ae ef8f                      	LDI R24, 0b1111_1111
0001af 158d                      	CP R24, R13
0001b0 f051                      	BREQ UNDERFLOCONFI6
0001b1 e082                      	LDI R24, 0b000_0010
0001b2 158e                      	CP R24, R14
0001b3 f0a9                      	BREQ CONFITOP245                       //Contador de horas
0001b4 e08a                      	LDI R24, 0b000_1010
0001b5 158d                      	CP R24, R13
0001b6 f079                      	BREQ OVERFLOCONFI7
0001b7 ef8f                      	LDI R24, 0b1111_1111
0001b8 158d                      	CP R24, R13
0001b9 f009                      	BREQ UNDERFLOCONFI6
0001ba ceac                      	rjmp loop
                                 UNDERFLOCONFI6:
0001bb e089                      	LDI R24, 9
0001bc 2ed8                      	MOV R13, R24
0001bd 94ea                      	DEC R14
0001be ef8f                      	LDI R24, 0b1111_1111
0001bf 158e                      	CP R24, R14
0001c0 f471                      	BRNE CONFIFIN5
0001c1 e082                      	LDI R24, 2
0001c2 2ee8                      	MOV R14, R24
0001c3 e083                      	LDI R24, 3
0001c4 2ed8                      	MOV R13, R24
0001c5 cea1                      	RJMP loop
                                 OVERFLOCONFI7:
0001c6 24dd                      	CLR R13
0001c7 94e3                      	INC R14                         //Contador de decenas de horas
0001c8 ce9e                      	rjmp loop
                                 CONFITOP245:
0001c9 e084                      	LDI R24, 0b0000_0100
0001ca 16d8                      	CP R13, R24
0001cb f009                      	BREQ CONFITOP25
0001cc ce9a                      	RJMP loop
                                 CONFITOP25:
0001cd 24dd                      	CLR R13
0001ce 24ee                      	CLR R14
                                 CONFIFIN5:
0001cf ce97                      	RJMP loop
                                 //*****************************************************************
                                 //                      ENCENDER MASCARAS
                                 //*****************************************************************
                                 ENCENDERMASK:
0001d0 e001                      	LDI R16, 0b0000_0001
0001d1 9300 006f                 	STS TIMSK1, R16
0001d3 ce93                      	RJMP loop
                                 //*****************************************************************************
                                 // Sub-rutinas
                                 //*****************************************************************************
                                 
                                 delaybounce2:
0001d4 ef0f                      	LDI R16, 255
                                 
                                 	delay2:
0001d5 950a                      		DEC R16
0001d6 f7f1                      		BRNE delay2
0001d7 9508                      	ret
                                 
                                 delaybounce3:
0001d8 ef8f                      	LDI R24, 255
                                 	delay3:
0001d9 e604                      	LDI R16, 100
                                 	delay4:
0001da 950a                      		DEC R16
0001db f7f1                      		BRNE delay4
0001dc 958a                      		DEC r24
0001dd f7d9                      		BRNE delay3
0001de 9508                      	ret
                                 IdelayT0:
0001df e005                      	LDI R16, (1 << CS02) | (1 << CS00)
0001e0 bd05                      	OUT TCCR0B, R16
                                 
0001e1 e604                      	LDI R16, 100
0001e2 bd06                      	OUT TCNT0, R16
                                 
0001e3 9508                      	RET
                                 IdelayT1:
0001e4 e003                      	LDI R16, 0b0000_0011
0001e5 9300 0081                 	STS TCCR1B, R16
                                 
0001e7 e00b                      	LDI R16, HIGH(T1Value)
0001e8 9300 0085                 	STS TCNT1H, R16
                                 
0001ea ed0c                      	LDI R16, LOW(T1Value)
0001eb 9300 0084                 	STS TCNT1L, R16
0001ed 2700                      	clr R16
                                 
                                 
0001ee 9508                      	RET
                                 //***********************************************************************************
                                 //PCINT0
                                 //***********************************************************************************
                                 ISR_PCINT0:
0001ef 930f                      	PUSH R16
0001f0 b70f                      	IN R16, SREG
0001f1 930f                      	PUSH R16
                                 
0001f2 95a3                      	INC R26
0001f3 ffa1                      	SBRS R26, 1
0001f4 c05c                      	RJMP FIN
0001f5 fd33                      	SBRC R19, 3
0001f6 c015                      	RJMP CONFIINT
                                 Verificar:
0001f7 27aa                      	CLR R26
0001f8 ff50                      	SBRS R21, 0
0001f9 c005                      	RJMP INCRE
                                 
0001fa ff51                      	SBRS R21, 1
0001fb c005                      	RJMP INCRE2
0001fc ff52                      	SBRS R21, 2
0001fd c005                      	RJMP INCRE3
0001fe c006                      	RJMP INCRE4
                                 INCRE:
0001ff e031                      	LDI R19, 0b0001
000200 c050                      	RJMP FIN
                                 INCRE2: 
000201 e032                      	LDI R19, 0b0010
000202 c04e                      	RJMP FIN
                                 INCRE3: 
000203 e034                      	LDI R19, 0b0100
000204 c04c                      	RJMP FIN
                                 INCRE4: 
000205 9a2d                      	SBI PORTB, PB5
000206 2e53                      	MOV R5, R19
000207 e038                      	LDI R19, 0b1000
000208 2935                      	OR R19, R5
000209 c047                      	RJMP FIN
                                 APAGARCONFI:
00020a 7f3c                      	CBR R19, PC3
00020b c045                      	RJMP FIN
                                 CONFIINT:
00020c 27aa                      	CLR R26
00020d ff50                      	SBRS R21, 0
00020e c007                      	RJMP CONFI1
00020f ff51                      	SBRS R21, 1
000210 c01d                      	RJMP CONFI2
000211 ff52                      	SBRS R21, 2
000212 c033                      	RJMP CONFI3
000213 ff53                      	SBRS R21, 3
000214 c036                      	RJMP CONFI4
000215 c03b                      	RJMP FIN
                                 //*****************************************************************************************************************************//
                                 CONFI1:
                                 //*************************
                                 //CONFI HORA
                                 //*************************
000216 ff30                      	SBRS R19, 0
000217 c005                      	RJMP CONFIGURARFECHA1
000218 fe70                      	SBRS R7, 0
000219 2e66                      	MOV R6, R22
00021a fc70                      	SBRC R7, 0
00021b 2e67                      	MOV R6, R23
00021c c00f                      	RJMP CONFI11
                                 //*************************
                                 //CONFI FECHA
                                 //*************************
                                 CONFIGURARFECHA1:
00021d ff31                      	SBRS R19, 1
00021e c005                      	RJMP CONFIGURARALARMA1
00021f fe70                      	SBRS R7, 0
000220 2c60                      	MOV R6, R0
000221 fc70                      	SBRC R7, 0
000222 2c63                      	MOV R6, R3
000223 c008                      	RJMP CONFI11
                                 //*************************
                                 //CONFI ALARMA
                                 //*************************
                                 CONFIGURARALARMA1:
000224 ff32                      	SBRS R19, 2
000225 c02b                      	RJMP FIN
000226 fe70                      	SBRS R7, 0
000227 94b3                      	INC R11
000228 fc70                      	SBRC R7, 0
000229 94d3                      	INC R13
00022a c000                      	RJMP CONFI12
                                 CONFI12:
00022b c025                      	RJMP FIN
                                 CONFI11:
00022c 9463                      	INC R6
00022d c023                      	RJMP FIN
                                 //*****************************************************************************************************************************//
                                 CONFI2: 
                                 //*************************
                                 //CONFI HORA
                                 //*************************
00022e ff30                      	SBRS R19, 0
00022f c005                      	RJMP CONFIGURARFECHA2
000230 fe70                      	SBRS R7, 0
000231 2e66                      	MOV R6, R22
000232 fc70                      	SBRC R7, 0
000233 2e67                      	MOV R6, R23
000234 c00f                      	RJMP CONFI21
                                 //*************************
                                 //CONFI FECHA
                                 //*************************
                                 CONFIGURARFECHA2:
000235 ff31                      	SBRS R19, 1
000236 c005                      	RJMP CONFIGURARALARMA2
000237 fe70                      	SBRS R7, 0
000238 2c60                      	MOV R6, R0
000239 fc70                      	SBRC R7, 0
00023a 2c63                      	MOV R6, R3
00023b c008                      	RJMP CONFI21
                                 //*************************
                                 //CONFI ALARMA
                                 //*************************
                                 CONFIGURARALARMA2:
00023c ff32                      	SBRS R19, 2
00023d c013                      	RJMP FIN
00023e fe70                      	SBRS R7, 0
00023f 94ba                      	DEC R11
000240 fc70                      	SBRC R7, 0
000241 94da                      	DEC R13
000242 c000                      	RJMP CONFI22
                                 CONFI22:
000243 c00d                      	RJMP FIN
                                 CONFI21:
000244 946a                      	DEC R6
000245 c00b                      	RJMP FIN
                                 //*****************************************************************************************************************************//
                                 CONFI3: 
000246 9473                      	INC R7
000247 e082                      	LDI R24, 2
000248 1587                      	CP R24, R7
000249 f029                      	BREQ OVERCONFI3
00024a c006                      	RJMP FIN
                                 //*****************************************************************************************************************************//
                                 CONFI4:
00024b 982d                      	CBI PORTB, PB5
00024c e087                      	LDI R24, 0b0111
00024d 2338                      	AND R19, R24
00024e c002                      	RJMP FIN
                                 OVERCONFI3:
00024f 2477                      	CLR R7
000250 c000                      	RJMP FIN
                                 FIN:
000251 b153                      	IN R21, PINB
000252 910f                      	POP R16
000253 bf0f                      	OUT SREG, R16
000254 910f                      	POP R16
000255 9518                      	RETI
                                 //***********************************************************************************
                                 //TIMER1
                                 //***********************************************************************************
                                 TIM1_OVF:
000256 930f                      	PUSH R16
000257 b70f                      	IN R16, SREG
000258 930f                      	PUSH R16
                                 
000259 e00b                      	LDI R16, HIGH(T1Value)
00025a 9300 0085                 	STS TCNT1H, R16
                                 
00025c ed0c                      	LDI R16, LOW(T1Value)
00025d 9300 0084                 	STS TCNT1L, R16
                                 
00025f 16e9                      	CP R14, R25
000260 f449                      	BRNE NADA
000261 16d7                      	CP R13, R23
000262 f439                      	BRNE NADA
000263 16c2                      	CP R12, R18
000264 f429                      	BRNE NADA
000265 16b6                      	CP R11, R22
000266 f419                      	BRNE NADA
000267 e001                      	LDI R16, 0b0000_0001
000268 9300 006e                 	STS TIMSK0, R16
                                 NADA:
00026a e081                      	LDI R24, 1
00026b 94a3                      	INC R10
00026c 16a8                      	CP R10, R24
00026d f449                      	BRNE SUMA
                                 
00026e ffb0                      	SBRS R27, 0
00026f c001                      	RJMP ENP
000270 c003                      	RJMP APP
                                 ENP:
000271 24aa                      	CLR r10
000272 e0b1                      	LDI R27, 0b1
000273 c003                      	RJMP SUMA
                                 APP:
000274 24aa                      	CLR r10
000275 e0b0                      	LDI R27, 0b0
000276 c000                      	RJMP SUMA
                                 SUMA:
000277 9513                      	INC R17 
000278 3f10                      	CPI R17, 240
000279 f429                      	BRNE FIN3
00027a 2711                      	CLR r17
                                 SUM:
00027b 9563                          INC R22						//Contador de minutos
00027c 306a                      	CPI R22, 0b000_1010
00027d f029                          BREQ OVERFLO
00027e c076                      	RJMP FIN2
                                 FIN3:
00027f 910f                      	POP R16
000280 bf0f                      	OUT SREG, R16
000281 910f                      	POP R16
000282 9518                      	RETI
                                 OVERFLO:
000283 2766                      	CLR R22
000284 9523                      	INC R18                         //Contador de decenas
000285 3026                      	CPI R18, 0b000_0110
000286 f009                      	BREQ OVERFLO2
000287 c06d                      	RJMP FIN2
                                 OVERFLO2:
000288 2722                      	CLR R18
000289 9573                      	INC R23  
00028a 3092                      	CPI R25, 0b000_0010
00028b f031                      	BREQ TOP24                       //Contador de horas
00028c 307a                      	CPI R23, 0b000_1010
00028d f009                      	BREQ OVERFLO3
00028e c066                      	rjmp FIN2
                                 OVERFLO3:
00028f 2777                      	CLR R23
000290 9593                      	INC R25                         //Contador de decenas de horas
000291 c063                      	rjmp FIN2
                                 TOP24:
000292 3074                      	CPI R23, 0b0000_0100
000293 f009                      	BREQ TOP2
000294 c060                      	RJMP FIN2
                                 TOP2:
000295 2777                      	CLR R23
000296 2766                      	CLR R22
000297 2722                      	CLR R18
000298 2799                      	CLR R25
                                 
                                 //EValua si ya va por dia 3X
000299 e082                      	LDI R24, 2
00029a 1618                      	CP R1, R24
00029b f441                      	BRNE COMP
00029c e082                      	LDI R24, 2
00029d 1628                      	CP R2, R24
00029e f429                      	BRNE COMP
00029f e089                      	LDI R24, 9
0002a0 9403                      	INC R0 
0002a1 1608                      	CP R0, R24
0002a2 f1c1                      	BREQ NM
0002a3 c051                      	RJMP FIN2
                                 COMP:
0002a4 e083                      	LDI R24, 3
0002a5 1628                      	CP R2, R24
0002a6 f029                      	BREQ TOPDIA
                                 SUMANORM:
0002a7 e08a                      	LDI R24, 10
0002a8 9403                      	INC R0 
0002a9 1608                      	CP R0, R24
0002aa f169                      	BREQ CD
                                 
0002ab c049                      	RJMP FIN2
                                 TOPDIA:
0002ac e081                      	LDI R24, 1
0002ad 1618                      	CP R1, R24
0002ae f0f9                      	BREQ PR1
                                 
0002af e083                      	LDI R24, 3
0002b0 1618                      	CP R1, R24
0002b1 f0e1                      	BREQ PR1
                                 
0002b2 e084                      	LDI R24, 4
0002b3 1618                      	CP R1, R24
0002b4 f0f1                      	BREQ PR2
                                 
0002b5 e085                      	LDI R24, 5
0002b6 1618                      	CP R1, R24
0002b7 f0b1                      	BREQ PR1
                                 
0002b8 e086                      	LDI R24, 6
0002b9 1618                      	CP R1, R24
0002ba f0c1                      	BREQ PR2
                                 
0002bb e087                      	LDI R24, 7
0002bc 1618                      	CP R1, R24
0002bd f081                      	BREQ PR1
                                 
0002be e088                      	LDI R24, 8
0002bf 1618                      	CP R1, R24
0002c0 f069                      	BREQ PR1
                                 
0002c1 e089                      	LDI R24, 9
0002c2 1618                      	CP R1, R24
0002c3 f079                      	BREQ PR2
                                 
0002c4 e08a                      	LDI R24, 10
0002c5 1618                      	CP R1, R24
0002c6 f039                      	BREQ PR1
                                 
0002c7 e08b                      	LDI R24, 11
0002c8 1618                      	CP R1, R24
0002c9 f049                      	BREQ PR2
                                 
0002ca e08c                      	LDI R24, 12
0002cb 1618                      	CP R1, R24
0002cc f009                      	BREQ PR1
                                 
0002cd c027                      	rjmp FIN2
                                 PR1:
0002ce e082                      	LDI R24, 2
0002cf 9403                      	INC R0 
0002d0 1608                      	CP R0, R24
0002d1 f049                      	BREQ NM
0002d2 c022                      	RJMP FIN2
                                 PR2:
0002d3 e081                      	LDI R24, 1
0002d4 9403                      	INC R0 
0002d5 1608                      	CP R0, R24
0002d6 f021                      	BREQ NM
0002d7 c01d                      	RJMP FIN2
                                 
                                 CD:
0002d8 2400                      	CLR R0
0002d9 9423                      	INC R2
0002da c01a                      	RJMP FIN2
                                 
                                 NM:
0002db 2400                      	CLR R0
0002dc 9403                      	INC R0
0002dd 2422                      	CLR R2
0002de e081                      	LDI R24, 1
0002df 1648                      	CP R4, R24
0002e0 f049                      	BREQ TOPMES
0002e1 9413                      	INC R1
0002e2 9433                      	INC R3
0002e3 e08a                      	LDI R24, 10
0002e4 1638                      	CP R3, R24
0002e5 f009                      	BREQ TOPNMES
0002e6 c00e                      	RJMP FIN2
                                 TOPNMES:
0002e7 2433                      	CLR R3
0002e8 9443                      	INC R4
0002e9 c00b                      	RJMP FIN2
                                 TOPMES:
0002ea 9433                      	INC R3
0002eb 9413                      	INC R1
0002ec e083                      	LDI R24, 3
0002ed 1638                      	CP R3, R24
0002ee f009                      	BREQ CM
0002ef c005                      	RJMP FIN2
                                 CM:
0002f0 2411                      	CLR R1
0002f1 2433                      	CLR R3
0002f2 2444                      	CLR R4
0002f3 9413                      	INC R1
0002f4 9433                      	INC R3
                                 FIN2:
0002f5 910f                      	POP R16
0002f6 bf0f                      	OUT SREG, R16
0002f7 910f                      	POP R16
0002f8 9518                      	RETI
                                 
                                 //***********************************************************************************
                                 //TIMER0
                                 //***********************************************************************************
                                 TIM0_OVF:
0002f9 930f                      	PUSH R16
0002fa b70f                      	IN R16, SREG
0002fb 930f                      	PUSH R16
                                 
0002fc e604                      	LDI R16, 100
0002fd bd06                      	OUT TCNT0, R16
                                 
0002fe e081                      	LDI R24, 0b0001
0002ff 1589                      	CP R24, R9
000300 94f3                      	INC R15
000301 e684                      	LDI R24, 100
000302 16f8                      	CP R15, R24
000303 f4c1                      	BRNE FIN0
000304 24ff                      	CLR R15
                                 
000305 9b2c                      	SBIS PORTB, PB4
000306 c002                      	RJMP ENCENDERBUZZ
                                 
000307 992c                      	SBIC PORTB, PB4
000308 c009                      	RJMP APAGARBUZZ
                                 
                                 	ENCENDERBUZZ:
000309 9a2c                      		SBI PORTB, PB4
00030a 9483                      		INC R8
00030b e38c                      		LDI R24, 60
00030c 1688                      		CP R8, R24
00030d f471                      		BRNE FIN0
00030e e000                      		LDI R16, 0b0000_0000
00030f 9300 006e                 		STS TIMSK0, R16
000311 c00a                      		RJMP FIN0
                                 	APAGARBUZZ:
000312 982c                      		CBI PORTB, PB4
000313 9483                      		INC R8
000314 e38c                      		LDI R24, 60
000315 1688                      		CP R8, R24
000316 f429                      		BRNE FIN0
000317 2488                      		CLR R8
000318 e000                      		LDI R16, 0b0000_0000
000319 9300 006e                 		STS TIMSK0, R16
00031b c000                      		RJMP FIN0
                                 	FIN0:
00031c 910f                      	POP R16
00031d bf0f                      	OUT SREG, R16
00031e 910f                      	POP R16


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

"ATmega328P" register use summary:
x  :   0 y  :   0 z  :  12 r0 :  24 r1 :  33 r2 :   9 r3 :  22 r4 :   8 
r5 :   3 r6 :  17 r7 :  21 r8 :   6 r9 :   7 r10:   5 r11:  10 r12:   9 
r13:  13 r14:   9 r15:   4 r16:  73 r17:   6 r18:  13 r19:  23 r20:  25 
r21:   9 r22:  16 r23:  20 r24: 133 r25:  12 r26:   5 r27:   5 r28:   1 
r29:   1 r30:  25 r31:  13 
Registers used: 33 out of 35 (94.3%)

"ATmega328P" instruction use summary:
.lds  :   0 .sts  :   0 adc   :   0 add   :  12 adiw  :   0 and   :   1 
andi  :   0 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :  53 brge  :   8 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 brlt  :   0 brmi  :   0 
brne  :  22 brpl  :   0 brsh  :   0 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :  14 cbi   :  19 cbr   :   1 
clc   :   0 clh   :   0 cli   :   0 cln   :   0 clr   :  53 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :  65 cpc   :   0 
cpi   :  16 cpse  :   0 dec   :  10 eor   :   0 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    :   4 inc   :  40 jmp   :   4 
ld    :   0 ldd   :   0 ldi   : 144 lds   :   0 lpm   :  24 lsl   :   0 
lsr   :   0 mov   :  24 movw  :   0 mul   :   0 muls  :   0 mulsu :   0 
neg   :   0 nop   :   0 or    :   1 ori   :   0 out   :  25 pop   :   8 
push  :   6 rcall :   0 ret   :   4 reti  :   4 rjmp  : 108 rol   :   0 
ror   :   0 sbc   :   0 sbci  :   0 sbi   :  20 sbic  :   1 sbis  :   1 
sbiw  :   0 sbr   :   0 sbrc  :  11 sbrs  :  29 sec   :   0 seh   :   0 
sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   0 sev   :   0 
sez   :   0 sleep :   0 spm   :   0 st    :   0 std   :   0 sts   :  15 
sub   :   0 subi  :   0 swap  :   0 tst   :   0 wdr   :   0 
Instructions used: 32 out of 113 (28.3%)

"ATmega328P" memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000640   1538     10   1548   32768   4.7%
[.dseg] 0x000100 0x000100      0      0      0    2048   0.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 0 warnings
